0000fe-0000ff   ; GLOBAL @TXTPTR
0000fd          ; GLOBAL @TXTWIDTH
00ff00          ; GLOBAL @TXTROW
00ff01          ; GLOBAL @TXTPOS
00ff02          ; GLOBAL @TXTPGROWS
00ff03          ; GLOBAL @DISPMODE
00ff04          ; GLOBAL @PREVDISP
00ff05          ; GLOBAL @CURCHR
00ff06          ; GLOBAL @PMPTCHR
00ff20-00ff21   ; GLOBAL @GRPTR
00ff22-00ff23   ; GLOBAL @GRX
00ff24-00ff25   ; GLOBAL @GRY
00ff26          ; GLOBAL @GRFONT
00ff10-00ff12   ; GLOBAL @RAMTOP
00ff13-00ff15   ; GLOBAL @HEAPSTART
00ff16-00ff18   ; GLOBAL @RUNLENGTH
00fe00          ; GLOBAL @TYPBUFFER
00fe50          ; GLOBAL @TYPBUFFER2
00fea0          ; GLOBAL @TYPBUFFER3
00c0f0          ; GLOBAL @DISK4_CMD
00c0f1          ; GLOBAL @DISK4_PARAM0
00c0f4          ; GLOBAL @DISK4_PARAM1
00c0f7          ; GLOBAL @DISK4_RET0
00c0fa          ; GLOBAL @DISK4_RET1
00c0fd          ; GLOBAL @DISK4_RET2
00c0ff          ; GLOBAL @DISK4_GO
00c800          ; GLOBAL @DISK4_RAM
00c700          ; GLOBAL @SLOT_7_ROM
00c0b0          ; GLOBAL @BITBLT_CMD
00c0b1          ; GLOBAL @BITBLT_PARAM0
00c0b2          ; GLOBAL @BITBLT_PARAM1
00c0b3          ; GLOBAL @BITBLT_PARAM2
00c0b6          ; GLOBAL @BITBLT_PARAM3
00c0b9          ; GLOBAL @BITBLT_PARAM4
00c0bc          ; GLOBAL @BITBLT_PARAM5
00c0bf          ; GLOBAL @BITBLT_RUNNING
00c800          ; GLOBAL @BITBLT_RAM
00c300          ; GLOBAL @SLOT_3_ROM
000100          ; GLOBAL @INPBUFFER
000150          ; GLOBAL @INPBUFFER2
0001a0          ; GLOBAL @INPBUFFER3
000081          ; GLOBAL @SHOWCHAR

010000 ; SUB FNT_Edit:
00d000          ; VAR @NPRM
00d001-00d003   ; VAR @CMD
00d004-00d006   ; VAR @FILENAME
010000 a9 08                               lda #$8               ; DISP_II4
010002 4f 5c 08 00 ff                      jsr.a24 ($ff0008)     ; os4_SetScreenMode
010007 4f 5c 47 00 ff                      jsr.a24 ($ff0047)     ; os4_ClearGraphics
01000c a9 02                               lda #$2
01000e 8d 00 ff                            sta $ff00             ; TXTROW
010011 9c 01 ff                            stz $ff01             ; TXTPOS
010014 a2 00                               ldx #$0
010016 4f 5c 3e 00 ff                      jsr.a24 ($ff003e)     ; os4_ClearScreen
01001b a9 41                               lda #$41
01001d 85 81                               sta $81               ; SHOWCHAR
01001f                 FOR1001f_start:
01001f                                 ;; FOR X = 0 TO 39 {
01001f a2 00                               ldx #$0
010021                 FOR1001f_loop:
010021 4f bd ea 05 01                      lda.a24 $0105ea,X     ; Header
010026 f0 0a                               beq +10               ; for1001f_end [10032]
010028 09 80                               ora #$80
01002a 9d 0a 04                            sta $040a,X
01002d e8                                  inx
01002e e0 28                               cpx #$28
010030 d0 ef                               bne -17               ; FOR1001f_loop [10021]
010032                 FOR1001f_end:
010032 ad 00 d0                            lda $d000             ; NPRM
010035                                 ;; IF != {
010035 f0 05                               beq +5                ; IF10035_end [1003c]
010037 4f 20 24 02 01                      jsr.a24 $010224       ; DoFont
01003c                 IF10035_end:
01003c 4f 20 2e 04 01                      jsr.a24 $01042e       ; refreshScreen
010041 4f 20 77 05 01                      jsr.a24 $010577       ; ClearInputBuffers
010046                 LOOP10046_start:
010046                                 ;; LOOP {
010046                 LOOP10046_loop:
010046 4f 5c 0b 00 ff                      jsr.a24 ($ff000b)     ; os4_SetScreenBase
01004b ad 01 ff                            lda $ff01             ; TXTPOS
01004e                                 ;; IF == {
01004e d0 1b                               bne +27               ; IF1004e_end [1006b]
010050 a9 c1                               lda #$c1
010052 4f 5c 11 00 ff                      jsr.a24 ($ff0011)     ; os4_PrintChar
010057 a9 e1                               lda #$e1
010059 4f 5c 11 00 ff                      jsr.a24 ($ff0011)     ; os4_PrintChar
01005e ad 06 ff                            lda $ff06             ; PMPTCHR
010061 4f 5c 11 00 ff                      jsr.a24 ($ff0011)     ; os4_PrintChar
010066 4f 5c 17 00 ff                      jsr.a24 ($ff0017)     ; os4_PrintCursor
01006b                 IF1004e_end:
01006b                 LOOP1006b_start:
01006b                                 ;; LOOP {
01006b                 LOOP1006b_loop:
01006b 2c 00 c0                            bit $c000             ; KBD
01006e                                 ;; IF - {
01006e 10 04                               bpl +4                ; IF1006e_end [10074]
010070                                 ;; BREAK
010070 4f 80 02 00                         bra.a24 +2            ; loop1006b_end [10076]
010074                 IF1006e_end:
010074 80 f5                               bra -11               ; LOOP1006b_loop [1006b]
010076                 LOOP1006b_end:
010076 ad 00 c0                            lda $c000             ; KBD
010079 2c 10 c0                            bit $c010             ; KBDSTRB
01007c                                 ;; IF == 155 {
01007c c9 9b                               cmp #$9b
01007e d0 14                               bne +20               ; IF1007c_end [10094]
010080 ad 03 ff                            lda $ff03             ; DISPMODE
010083 29 08                               and #$8               ; DISP_II4
010085                                 ;; IF == {
010085 d0 04                               bne +4                ; IF10085_else [1008b]
010087 a9 08                               lda #$8               ; DISP_II4
010089 80 02                               bra +2                ; IF10085_end [1008d]
01008b                 IF10085_else:
01008b                                 ;; ELSE
01008b a9 00                               lda #$0               ; DISP_TEXT_1
01008d                 IF10085_end:
01008d 4f 5c 08 00 ff                      jsr.a24 ($ff0008)     ; os4_SetScreenMode
010092                                 ;; CONTINUE
010092 80 b2                               bra -78               ; loop10046_start [10046]
010094                 IF1007c_end:
010094 ae 03 ff                            ldx $ff03             ; DISPMODE
010097 e0 08                               cpx #$8               ; DISP_II4
010099                                 ;; IF == {
010099 d0 0b                               bne +11               ; IF10099_end [100a6]
01009b 29 7f                               and #$7f
01009d 85 81                               sta $81               ; SHOWCHAR
01009f 4f 20 2e 04 01                      jsr.a24 $01042e       ; refreshScreen
0100a4                                 ;; CONTINUE
0100a4 80 a0                               bra -96               ; loop10046_start [10046]
0100a6                 IF10099_end:
0100a6                                 ;; IF == 141 {
0100a6 c9 8d                               cmp #$8d
0100a8 d0 2e                               bne +46               ; IF100a6_end [100d8]
0100aa 4f 5c 1a 00 ff                      jsr.a24 ($ff001a)     ; os4_ClearCursor
0100af 4f 5c 35 00 ff                      jsr.a24 ($ff0035)     ; os4_NextLine
0100b4 4f 20 a8 05 01                      jsr.a24 $0105a8       ; CurrentToPrevInputBuffer
0100b9 9c ff d0                            stz $d0ff
0100bc 4f 20 9c 04 01                      jsr.a24 $01049c       ; CommandLine
0100c1 8d ff d0                            sta $d0ff
0100c4 4f 20 85 05 01                      jsr.a24 $010585       ; ClearCurrentInputBuffer
0100c9 ad ff d0                            lda $d0ff
0100cc                                 ;; IF == 255 {
0100cc c9 ff                               cmp #$ff
0100ce d0 04                               bne +4                ; IF100cc_end [100d4]
0100d0 a9 00                               lda #$0
0100d2 4f 60                               rts.a24
0100d4                 IF100cc_end:
0100d4                                 ;; CONTINUE
0100d4 4f 80 6e ff                         bra.a24 -146          ; loop10046_start [10046]
0100d8                 IF100a6_end:
0100d8                                 ;; IF == 255 {
0100d8 c9 ff                               cmp #$ff
0100da d0 29                               bne +41               ; IF100d8_end [10105]
0100dc ad 01 ff                            lda $ff01             ; TXTPOS
0100df                                 ;; IF > 3 {
0100df c9 03                               cmp #$3
0100e1 f0 1e                               beq +30               ; IF100df_end [10101]
0100e3 90 1c                               bcc +28               ; IF100df_end [10101]
0100e5 4f 5c 1a 00 ff                      jsr.a24 ($ff001a)     ; os4_ClearCursor
0100ea a9 a0                               lda #$a0
0100ec ac 01 ff                            ldy $ff01             ; TXTPOS
0100ef 88                                  dey
0100f0 91 fe                               sta ($fe),Y           ; TXTPTR
0100f2 88                                  dey
0100f3 88                                  dey
0100f4 a9 00                               lda #$0
0100f6 99 00 01                            sta $0100,Y           ; INPBUFFER
0100f9 ce 01 ff                            dec $ff01             ; TXTPOS
0100fc 4f 5c 17 00 ff                      jsr.a24 ($ff0017)     ; os4_PrintCursor
010101                 IF100df_end:
010101                                 ;; CONTINUE
010101 4f 80 41 ff                         bra.a24 -191          ; loop10046_start [10046]
010105                 IF100d8_end:
010105                                 ;; IF == 137 {
010105 c9 89                               cmp #$89
010107 d0 09                               bne +9                ; IF10105_end [10112]
010109 4f 20 0b 05 01                      jsr.a24 $01050b       ; CompleteCommand
01010e                                 ;; CONTINUE
01010e 4f 80 34 ff                         bra.a24 -204          ; loop10046_start [10046]
010112                 IF10105_end:
010112                                 ;; IF == 139 {
010112 c9 8b                               cmp #$8b
010114 d0 13                               bne +19               ; IF10112_end [10129]
010116 4f 20 93 05 01                      jsr.a24 $010593       ; PrevToCurrentInputBuffer
01011b 4f 20 bd 05 01                      jsr.a24 $0105bd       ; InputBufferToTextScreen
010120 4f 5c 17 00 ff                      jsr.a24 ($ff0017)     ; os4_PrintCursor
010125                                 ;; CONTINUE
010125 4f 80 1d ff                         bra.a24 -227          ; loop10046_start [10046]
010129                 IF10112_end:
010129                                 ;; IF == 154 {
010129 c9 9a                               cmp #$9a
01012b d0 13                               bne +19               ; IF10129_end [10140]
01012d 4f 20 93 05 01                      jsr.a24 $010593       ; PrevToCurrentInputBuffer
010132 4f 20 bd 05 01                      jsr.a24 $0105bd       ; InputBufferToTextScreen
010137 4f 5c 17 00 ff                      jsr.a24 ($ff0017)     ; os4_PrintCursor
01013c                                 ;; CONTINUE
01013c 4f 80 06 ff                         bra.a24 -250          ; loop10046_start [10046]
010140                 IF10129_end:
010140                                 ;; IF > 159 {
010140 c9 9f                               cmp #$9f
010142 f0 1b                               beq +27               ; IF10140_end [1015f]
010144 90 19                               bcc +25               ; IF10140_end [1015f]
010146 ac 01 ff                            ldy $ff01             ; TXTPOS
010149 4f 5c 11 00 ff                      jsr.a24 ($ff0011)     ; os4_PrintChar
01014e c0 28                               cpy #$28
010150                                 ;; IF < {
010150 b0 0d                               bcs +13               ; IF10150_end [1015f]
010152 29 7f                               and #$7f
010154 88                                  dey
010155 88                                  dey
010156 88                                  dey
010157 99 00 01                            sta $0100,Y           ; INPBUFFER
01015a 4f 5c 17 00 ff                      jsr.a24 ($ff0017)     ; os4_PrintCursor
01015f                 IF10150_end:
01015f                 IF10140_end:
01015f 4f 80 e3 fe                         bra.a24 -285          ; LOOP10046_loop [10046]
010163                 LOOP10046_end:

010163 ; SUB DoHelp:
000004          ; VAR @I
000005          ; VAR @I6
000006          ; VAR @COL
010163 4f 5c 2f 00 ff                      jsr.a24 ($ff002f)     ; os4_ResetPaginate
010168 a9 16                               lda #$16              ; PAGINATE_LINES_PER_PAGE
01016a 8d 00 d7                            sta $d700
01016d 4f 5c 32 00 ff                      jsr.a24 ($ff0032)     ; os4_PaginateLine
010172 2f a9 fe 05 01                      lda.t #$105fe         ; HelpListStr
010177 2f 8d 00 d7                         sta.t $00d700
01017b 4f 5c 1d 00 ff                      jsr.a24 ($ff001d)     ; os4_PrintString
010180 a9 16                               lda #$16              ; PAGINATE_LINES_PER_PAGE
010182 8d 00 d7                            sta $d700
010185 4f 5c 32 00 ff                      jsr.a24 ($ff0032)     ; os4_PaginateLine
01018a 4f 5c 32 00 ff                      jsr.a24 ($ff0032)     ; os4_PaginateLine
01018f                       ;; M@$4 = 1 
01018f 85 00                               sta $00
010191 a9 01                               lda #$1
010193 85 04                               sta $04
010195 a5 00                               lda $00
010197                       ;; M@$6 = 0 
010197 85 00                               sta $00
010199 a9 00                               lda #$0
01019b 85 06                               sta $06
01019d a5 00                               lda $00
01019f                 DO1019f_start:
01019f                                 ;; DO {
01019f                 DO1019f_loop:
01019f 4f 5c 14 00 ff                      jsr.a24 ($ff0014)     ; os4_PrintSpace
0101a4 a5 04                               lda $04               ; I
0101a6                       ;; A <<= 2 
0101a6 0a                                  asl
0101a7 0a                                  asl
0101a8 85 05                               sta $05               ; I6
0101aa a5 04                               lda $04               ; I
0101ac                       ;; A <<= 1 
0101ac 0a                                  asl
0101ad 18                                  clc
0101ae 65 05                               adc $05               ; I6
0101b0 85 05                               sta $05               ; I6
0101b2 aa                                  tax
0101b3 6f bd cf 07 01                      lda.t.a24 $0107cf,X   ; CommandList
0101b8 2f 8d 00 d7                         sta.t $00d700
0101bc 4f 5c 1d 00 ff                      jsr.a24 ($ff001d)     ; os4_PrintString
0101c1 a5 06                               lda $06               ; COL
0101c3                                 ;; IF == {
0101c3 d0 13                               bne +19               ; IF101c3_else [101d8]
0101c5                       ;; M@$6 = 1 
0101c5 85 00                               sta $00
0101c7 a9 01                               lda #$1
0101c9 85 06                               sta $06
0101cb a5 00                               lda $00
0101cd                       ;; M@$ff01 = 12 
0101cd 85 00                               sta $00
0101cf a9 0c                               lda #$c
0101d1 8d 01 ff                            sta $ff01
0101d4 a5 00                               lda $00
0101d6 80 2b                               bra +43               ; IF101c3_end [10203]
0101d8                 IF101c3_else:
0101d8                                 ;; ELSE
0101d8                                 ;; IF == 1 {
0101d8 c9 01                               cmp #$1
0101da d0 11                               bne +17               ; IF101d8_end [101ed]
0101dc                       ;; M@$6 = 2 
0101dc 85 00                               sta $00
0101de a9 02                               lda #$2
0101e0 85 06                               sta $06
0101e2 a5 00                               lda $00
0101e4                       ;; M@$ff01 = 24 
0101e4 85 00                               sta $00
0101e6 a9 18                               lda #$18
0101e8 8d 01 ff                            sta $ff01
0101eb a5 00                               lda $00
0101ed                 IF101d8_end:
0101ed                                 ;; IF == 2 {
0101ed c9 02                               cmp #$2
0101ef d0 12                               bne +18               ; IF101ed_end [10203]
0101f1                       ;; M@$6 = 0 
0101f1 85 00                               sta $00
0101f3 a9 00                               lda #$0
0101f5 85 06                               sta $06
0101f7 a5 00                               lda $00
0101f9 a9 16                               lda #$16              ; PAGINATE_LINES_PER_PAGE
0101fb 8d 00 d7                            sta $d700
0101fe 4f 5c 32 00 ff                      jsr.a24 ($ff0032)     ; os4_PaginateLine
010203                 IF101ed_end:
010203                 IF101c3_end:
010203 e6 04                               inc $04               ; I
010205 a5 04                               lda $04               ; I
010207                                 ;; WHILE < 5
010207 c9 05                               cmp #$5
010209 b0 02                               bcs +2                ; DO1019f_end [1020d]
01020b 80 92                               bra -110              ; DO1019f_loop [1019f]
01020d                 DO1019f_end:
01020d 4f 5c 35 00 ff                      jsr.a24 ($ff0035)     ; os4_NextLine
010212 4f 5c 35 00 ff                      jsr.a24 ($ff0035)     ; os4_NextLine
010217 a9 00                               lda #$0
010219 4f 60                               rts.a24

01021b ; SUB DoClear:
01021b 4f 5c 47 00 ff                      jsr.a24 ($ff0047)     ; os4_ClearGraphics
010220 a9 00                               lda #$0
010222 4f 60                               rts.a24

010224 ; SUB DoFont:
00d000          ; VAR @NPRM
00d001          ; VAR @CMD
00d004          ; VAR @FONTNAME
010224 ad 00 d0                            lda $d000             ; NPRM
010227                                 ;; IF < 1 {
010227 c9 01                               cmp #$1
010229 b0 12                               bcs +18               ; IF10227_end [1023d]
01022b 2f a9 60 06 01                      lda.t #$10660         ; NoFontNameErrStr
010230 2f 8d 00 d7                         sta.t $00d700
010234 4f 5c 20 00 ff                      jsr.a24 ($ff0020)     ; os4_PrintError
010239 a9 00                               lda #$0
01023b 4f 60                               rts.a24
01023d                 IF10227_end:
01023d 2f ae 04 d0                         ldx.t $00d004         ; FONTNAME
010241 4f 7b                               lda.a24 X
010243 c9 30                               cmp #$30
010245                                 ;; IF == {
010245 d0 16                               bne +22               ; IF10245_end [1025d]
010247 a0 01                               ldy #$1
010249 4f ab                               lda.a24 XY
01024b                                 ;; IF == {
01024b d0 10                               bne +16               ; IF1024b_end [1025d]
01024d a9 00                               lda #$0
01024f 4f 5c 03 02 ff                      jsr.a24 ($ff0203)     ; os4_GrSetFont
010254 4f 20 27 04 01                      jsr.a24 $010427       ; refresh
010259 a9 00                               lda #$0
01025b 4f 60                               rts.a24
01025d                 IF1024b_end:
01025d                 IF10245_end:
01025d c9 61                               cmp #$61
01025f                                 ;; IF == {
01025f d0 52                               bne +82               ; IF1025f_end [102b3]
010261 a0 01                               ldy #$1
010263 4f ab                               lda.a24 XY
010265                                 ;; IF == {
010265 d0 10                               bne +16               ; IF10265_end [10277]
010267 a9 fc                               lda #$fc              ; FONTapple
010269 4f 5c 03 02 ff                      jsr.a24 ($ff0203)     ; os4_GrSetFont
01026e 4f 20 27 04 01                      jsr.a24 $010427       ; refresh
010273 a9 00                               lda #$0
010275 4f 60                               rts.a24
010277                 IF10265_end:
010277 c9 38                               cmp #$38
010279                                 ;; IF == {
010279 d0 16                               bne +22               ; IF10279_end [10291]
01027b a0 02                               ldy #$2
01027d 4f ab                               lda.a24 XY
01027f                                 ;; IF == {
01027f d0 10                               bne +16               ; IF1027f_end [10291]
010281 a9 ff                               lda #$ff              ; FONTA8
010283 4f 5c 03 02 ff                      jsr.a24 ($ff0203)     ; os4_GrSetFont
010288 4f 20 27 04 01                      jsr.a24 $010427       ; refresh
01028d a9 00                               lda #$0
01028f 4f 60                               rts.a24
010291                 IF1027f_end:
010291                 IF10279_end:
010291 c9 31                               cmp #$31
010293                                 ;; IF == {
010293 d0 1e                               bne +30               ; IF10293_end [102b3]
010295 a0 02                               ldy #$2
010297 4f ab                               lda.a24 XY
010299 c9 36                               cmp #$36
01029b                                 ;; IF == {
01029b d0 16                               bne +22               ; IF1029b_end [102b3]
01029d a0 03                               ldy #$3
01029f 4f ab                               lda.a24 XY
0102a1                                 ;; IF == {
0102a1 d0 10                               bne +16               ; IF102a1_end [102b3]
0102a3 a9 fe                               lda #$fe              ; FONTA16
0102a5 4f 5c 03 02 ff                      jsr.a24 ($ff0203)     ; os4_GrSetFont
0102aa 4f 20 27 04 01                      jsr.a24 $010427       ; refresh
0102af a9 00                               lda #$0
0102b1 4f 60                               rts.a24
0102b3                 IF102a1_end:
0102b3                 IF1029b_end:
0102b3                 IF10293_end:
0102b3                 IF1025f_end:
0102b3 c9 63                               cmp #$63
0102b5                                 ;; IF == {
0102b5 d0 1e                               bne +30               ; IF102b5_end [102d5]
0102b7 a0 01                               ldy #$1
0102b9 4f ab                               lda.a24 XY
0102bb c9 68                               cmp #$68
0102bd                                 ;; IF == {
0102bd d0 16                               bne +22               ; IF102bd_end [102d5]
0102bf a0 02                               ldy #$2
0102c1 4f ab                               lda.a24 XY
0102c3                                 ;; IF == {
0102c3 d0 10                               bne +16               ; IF102c3_end [102d5]
0102c5 a9 fd                               lda #$fd              ; FONTCHICAGO
0102c7 4f 5c 03 02 ff                      jsr.a24 ($ff0203)     ; os4_GrSetFont
0102cc 4f 20 27 04 01                      jsr.a24 $010427       ; refresh
0102d1 a9 00                               lda #$0
0102d3 4f 60                               rts.a24
0102d5                 IF102c3_end:
0102d5                 IF102bd_end:
0102d5                 IF102b5_end:
0102d5 2f a9 46 4f 4e                      lda.t #$4e4f46
0102da 2f 8d 80 d0                         sta.t $00d080
0102de 2f a9 54 53 3a                      lda.t #$3a5354
0102e3 2f 8d 83 d0                         sta.t $00d083
0102e7 a0 00                               ldy #$0
0102e9                 LOOP102e9_start:
0102e9                                 ;; LOOP {
0102e9                 LOOP102e9_loop:
0102e9 2f ae 04 d0                         ldx.t $00d004         ; FONTNAME
0102ed 4f ab                               lda.a24 XY
0102ef 4f 99 86 d0 00                      sta.a24 $00d086,Y
0102f4 4f ab                               lda.a24 XY
0102f6                                 ;; IF == {
0102f6 d0 04                               bne +4                ; IF102f6_end [102fc]
0102f8                                 ;; BREAK
0102f8 4f 80 03 00                         bra.a24 +3            ; loop102e9_end [102ff]
0102fc                 IF102f6_end:
0102fc c8                                  iny
0102fd 80 ea                               bra -22               ; LOOP102e9_loop [102e9]
0102ff                 LOOP102e9_end:
0102ff 2f a9 80 d0 00                      lda.t #$d080
010304 2f 8d 00 d6                         sta.t $00d600
010308 4f 5c 09 01 ff                      jsr.a24 ($ff0109)     ; os4_Disk4Exists
01030d                                 ;; IF != {
01030d f0 12                               beq +18               ; IF1030d_end [10321]
01030f 2f a9 98 06 01                      lda.t #$10698         ; NoFontFoundErr
010314 2f 8d 00 d7                         sta.t $00d700
010318 4f 5c 20 00 ff                      jsr.a24 ($ff0020)     ; os4_PrintError
01031d a9 00                               lda #$0
01031f 4f 60                               rts.a24
010321                 IF1030d_end:
010321 2f ad 00 c8                         lda.t $00c800         ; DISK4_RAM
010325 2f c9 c6 ce d4                      cmp.t #$d4cec6
01032a                                 ;; IF != {
01032a f0 12                               beq +18               ; IF1032a_end [1033e]
01032c 2f a9 b3 06 01                      lda.t #$106b3         ; NotFontFileErr
010331 2f 8d 00 d7                         sta.t $00d700
010335 4f 5c 20 00 ff                      jsr.a24 ($ff0020)     ; os4_PrintError
01033a a9 00                               lda #$0
01033c 4f 60                               rts.a24
01033e                 IF1032a_end:
01033e 2f a9 80 d0 00                      lda.t #$d080
010343 2f 8d 00 d1                         sta.t $00d100
010347 2f a9 04 a0 00                      lda.t #$a004          ; RAMFONTS
01034c 2f 8d 00 a0                         sta.t $00a000         ; RAMFONTS
010350 2f 8d 03 d1                         sta.t $00d103
010354 4f 20 7d 03 01                      jsr.a24 $01037d       ; loadFont
010359                                 ;; IF == {
010359 d0 12                               bne +18               ; IF10359_end [1036d]
01035b 2f a9 d3 06 01                      lda.t #$106d3         ; FontLoadFailedErr
010360 2f 8d 00 d7                         sta.t $00d700
010364 4f 5c 20 00 ff                      jsr.a24 ($ff0020)     ; os4_PrintError
010369 a9 00                               lda #$0
01036b 4f 60                               rts.a24
01036d                 IF10359_end:
01036d a9 00                               lda #$0
01036f 4f 5c 03 02 ff                      jsr.a24 ($ff0203)     ; os4_GrSetFont
010374 4f 20 27 04 01                      jsr.a24 $010427       ; refresh
010379 a9 00                               lda #$0
01037b 4f 60                               rts.a24

01037d ; SUB loadFont:
00d100-00d102   ; VAR @FILENAME
00d103-00d105   ; VAR @ADDRESS
000003          ; VAR @FN
000004-000006   ; VAR @R_IDX
000007-000008   ; VAR @ACTUAL
000009-00000a   ; VAR @C_IDX
01037d 2f ad 00 d1                         lda.t $00d100         ; FILENAME
010381 2f 8d 00 d6                         sta.t $00d600
010385 4f 5c 0f 01 ff                      jsr.a24 ($ff010f)     ; os4_Disk4Open
01038a                                 ;; IF != {
01038a f0 09                               beq +9                ; IF1038a_end [10395]
01038c 4f 5c 1e 01 ff                      jsr.a24 ($ff011e)     ; os4_Disk4PrintError
010391 a9 00                               lda #$0
010393 4f 60                               rts.a24
010395                 IF1038a_end:
010395 86 03                               stx $03               ; FN
010397 8e f1 c0                            stx $c0f1             ; DISK4_PARAM0
01039a 2f 64 04                            stz.t $04             ; R_IDX
01039d                 LOOP1039d_start:
01039d                                 ;; LOOP {
01039d                 LOOP1039d_loop:
01039d 4f 5c 15 01 ff                      jsr.a24 ($ff0115)     ; os4_Disk4Read
0103a2                                 ;; IF == 2 {
0103a2 c9 02                               cmp #$2
0103a4 d0 04                               bne +4                ; IF103a2_end [103aa]
0103a6                                 ;; BREAK
0103a6 4f 80 38 00                         bra.a24 +56           ; loop1039d_end [103e2]
0103aa                 IF103a2_end:
0103aa 2f ad f7 c0                         lda.t $00c0f7         ; DISK4_RET0
0103ae                                 ;; IF == {
0103ae d0 04                               bne +4                ; IF103ae_end [103b4]
0103b0                                 ;; BREAK
0103b0 4f 80 2e 00                         bra.a24 +46           ; loop1039d_end [103e2]
0103b4                 IF103ae_end:
0103b4 1f 85 07                            sta.w $07             ; ACTUAL
0103b7 1f 64 09                            stz.w $09             ; C_IDX
0103ba                 LOOP103ba_start:
0103ba                                 ;; LOOP {
0103ba                 LOOP103ba_loop:
0103ba 1f a2 00 c8                         ldx.w #$c800          ; DISK4_RAM
0103be 1f a4 09                            ldy.w $09             ; C_IDX
0103c1 4f ab                               lda.a24 XY
0103c3 2f e6 09                            inc.t $09             ; C_IDX
0103c6 2f ae 03 d1                         ldx.t $00d103         ; ADDRESS
0103ca 2f a4 04                            ldy.t $04             ; R_IDX
0103cd 4f bb                               sta.a24 XY
0103cf 2f e6 04                            inc.t $04             ; R_IDX
0103d2 1f a4 09                            ldy.w $09             ; C_IDX
0103d5 1f c4 07                            cpy.w $07             ; ACTUAL
0103d8                                 ;; IF == {
0103d8 d0 04                               bne +4                ; IF103d8_end [103de]
0103da                                 ;; BREAK
0103da 4f 80 02 00                         bra.a24 +2            ; loop103ba_end [103e0]
0103de                 IF103d8_end:
0103de 80 da                               bra -38               ; LOOP103ba_loop [103ba]
0103e0                 LOOP103ba_end:
0103e0 80 bb                               bra -69               ; LOOP1039d_loop [1039d]
0103e2                 LOOP1039d_end:
0103e2 a5 03                               lda $03               ; FN
0103e4 4f 5c 12 01 ff                      jsr.a24 ($ff0112)     ; os4_Disk4Close
0103e9 a5 04                               lda $04               ; R_IDX
0103eb 4f 60                               rts.a24

0103ed ; SUB DoChar:
00d000          ; VAR @NPRM
00d001          ; VAR @CMD
00d004-00d006   ; VAR @CHAR
0103ed ad 00 d0                            lda $d000             ; NPRM
0103f0                                 ;; IF < 1 {
0103f0 c9 01                               cmp #$1
0103f2 b0 10                               bcs +16               ; IF103f0_end [10404]
0103f4 2f a9 80 06 01                      lda.t #$10680         ; MissingValueErr
0103f9 2f 8d 00 d7                         sta.t $00d700
0103fd 4f 5c 20 00 ff                      jsr.a24 ($ff0020)     ; os4_PrintError
010402 4f 60                               rts.a24
010404                 IF103f0_end:
010404 2f ad 04 d0                         lda.t $00d004         ; CHAR
010408 2f 8d 00 d7                         sta.t $00d700
01040c 4f 5c 5f 00 ff                      jsr.a24 ($ff005f)     ; os4_ParseNumber
010411 85 81                               sta $81               ; SHOWCHAR
010413 4f 20 27 04 01                      jsr.a24 $010427       ; refresh
010418 a9 00                               lda #$0
01041a 4f 60                               rts.a24

01041c ; SUB DoQuit:
01041c a9 00                               lda #$0               ; DISP_TEXT_1
01041e 4f 5c 08 00 ff                      jsr.a24 ($ff0008)     ; os4_SetScreenMode
010423 a9 ff                               lda #$ff
010425 4f 60                               rts.a24

010427 ; SUB refresh:
010427 a9 08                               lda #$8               ; DISP_II4
010429 4f 5c 08 00 ff                      jsr.a24 ($ff0008)     ; os4_SetScreenMode

01042e ; SUB refreshScreen:
01042e 4f 5c 47 00 ff                      jsr.a24 ($ff0047)     ; os4_ClearGraphics
010433 a9 0a                               lda #$a
010435 4f 5c 06 02 ff                      jsr.a24 ($ff0206)     ; os4_GrSetX
01043a a9 1e                               lda #$1e
01043c 4f 5c 09 02 ff                      jsr.a24 ($ff0209)     ; os4_GrSetY
010441 2f a9 e8 06 01                      lda.t #$106e8         ; ASCII_Numbers
010446 2f 8d 00 d5                         sta.t $00d500
01044a 4f 5c 0f 02 ff                      jsr.a24 ($ff020f)     ; os4_GrTypesetString
01044f a9 0a                               lda #$a
010451 4f 5c 06 02 ff                      jsr.a24 ($ff0206)     ; os4_GrSetX
010456 a9 3c                               lda #$3c
010458 4f 5c 09 02 ff                      jsr.a24 ($ff0209)     ; os4_GrSetY
01045d 2f a9 02 07 01                      lda.t #$10702         ; ASCII_Uppercase
010462 2f 8d 00 d5                         sta.t $00d500
010466 4f 5c 0f 02 ff                      jsr.a24 ($ff020f)     ; os4_GrTypesetString
01046b a9 0a                               lda #$a
01046d 4f 5c 06 02 ff                      jsr.a24 ($ff0206)     ; os4_GrSetX
010472 a9 5a                               lda #$5a
010474 4f 5c 09 02 ff                      jsr.a24 ($ff0209)     ; os4_GrSetY
010479 2f a9 1d 07 01                      lda.t #$1071d         ; ASCII_Lowercase
01047e 2f 8d 00 d5                         sta.t $00d500
010482 4f 5c 0f 02 ff                      jsr.a24 ($ff020f)     ; os4_GrTypesetString
010487 a9 32                               lda #$32
010489 1f 8d 00 d5                         sta.w $00d500
01048d a9 78                               lda #$78
01048f 1f 8d 02 d5                         sta.w $00d502
010493 a5 81                               lda $81               ; SHOWCHAR
010495 4f 5c 15 02 ff                      jsr.a24 ($ff0215)     ; os4_GrTypesetCharBig
01049a 4f 60                               rts.a24

01049c ; SUB CommandLine:
000004          ; VAR @I
000005          ; VAR @I6
01049c ad 00 01                            lda $0100             ; INPBUFFER
01049f                                 ;; IF == {
01049f d0 02                               bne +2                ; IF1049f_end [104a3]
0104a1 4f 60                               rts.a24
0104a3                 IF1049f_end:
0104a3 2f a9 00 01 00                      lda.t #$100           ; INPBUFFER
0104a8 2f 8d 00 d7                         sta.t $00d700
0104ac 4f 5c 5c 00 ff                      jsr.a24 ($ff005c)     ; os4_ParseInputParams
0104b1 2f ad 01 d0                         lda.t $00d001
0104b5 2f 8d 00 d7                         sta.t $00d700
0104b9                 FOR104b9_start:
0104b9                                 ;; FOR @I = 0 TO 4 {
0104b9 a2 00                               ldx #$0
0104bb 86 04                               stx $04
0104bd                 FOR104b9_loop:
0104bd a5 04                               lda $04               ; I
0104bf                       ;; A <<= 2 
0104bf 0a                                  asl
0104c0 0a                                  asl
0104c1 85 05                               sta $05               ; I6
0104c3 a5 04                               lda $04               ; I
0104c5                       ;; A <<= 1 
0104c5 0a                                  asl
0104c6 18                                  clc
0104c7 65 05                               adc $05               ; I6
0104c9 85 05                               sta $05               ; I6
0104cb aa                                  tax
0104cc 6f bd cf 07 01                      lda.t.a24 $0107cf,X   ; CommandList
0104d1 2f 8d 03 d7                         sta.t $00d703
0104d5 4f 5c 4d 00 ff                      jsr.a24 ($ff004d)     ; os4_CompareTextCI
0104da                                 ;; IF - {
0104da 10 14                               bpl +20               ; IF104da_end [104f0]
0104dc a6 05                               ldx $05               ; I6
0104de 6f bd d2 07 01                      lda.t.a24 $0107d2,X   ; CommandList
0104e3 2f 85 00                            sta.t $00
0104e6 4f 5c 00 00 00                      jsr.a24 ($00)
0104eb 8d ff d0                            sta $d0ff
0104ee 4f 60                               rts.a24
0104f0                 IF104da_end:
0104f0 e6 04                               inc $04
0104f2 a6 04                               ldx $04
0104f4 e0 05                               cpx #$5
0104f6 d0 c5                               bne -59               ; FOR104b9_loop [104bd]
0104f8                 FOR104b9_end:
0104f8 2f a9 28 06 01                      lda.t #$10628         ; UnknownCommandErr
0104fd 2f 8d 00 d7                         sta.t $00d700
010501 4f 5c 20 00 ff                      jsr.a24 ($ff0020)     ; os4_PrintError
010506 9c ff d0                            stz $d0ff
010509 4f 60                               rts.a24

01050b ; SUB CompleteCommand:
000004          ; VAR @I
000005          ; VAR @I6
01050b 1f a9 00 01                         lda.w #$100           ; INPBUFFER
01050f 2f 8d 00 d7                         sta.t $00d700
010513                 FOR10513_start:
010513                                 ;; FOR @I = 0 TO 4 {
010513 a2 00                               ldx #$0
010515 86 04                               stx $04
010517                 FOR10513_loop:
010517 a5 04                               lda $04               ; I
010519                       ;; A <<= 2 
010519 0a                                  asl
01051a 0a                                  asl
01051b 85 05                               sta $05               ; I6
01051d a5 04                               lda $04               ; I
01051f                       ;; A <<= 1 
01051f 0a                                  asl
010520 18                                  clc
010521 65 05                               adc $05               ; I6
010523 85 05                               sta $05               ; I6
010525 aa                                  tax
010526 6f bd cf 07 01                      lda.t.a24 $0107cf,X   ; CommandList
01052b 2f 8d 03 d7                         sta.t $00d703
01052f 4f 5c 53 00 ff                      jsr.a24 ($ff0053)     ; os4_CompareStartOfTextCI
010534                                 ;; IF - {
010534 10 37                               bpl +55               ; IF10534_end [1056d]
010536 a6 05                               ldx $05               ; I6
010538 6f bd cf 07 01                      lda.t.a24 $0107cf,X   ; CommandList
01053d 2f 8d 00 d7                         sta.t $00d700
010541 1f a9 00 01                         lda.w #$100           ; INPBUFFER
010545 2f 8d 03 d7                         sta.t $00d703
010549 4f 5c 56 00 ff                      jsr.a24 ($ff0056)     ; os4_CopyString
01054e 1f a5 fe                            lda.w $fe             ; TXTPTR
010551 1f 1a                               inc.w
010553 1f 1a                               inc.w
010555 1f 1a                               inc.w
010557 2f 8d 03 d7                         sta.t $00d703
01055b 4f 5c 59 00 ff                      jsr.a24 ($ff0059)     ; os4_CopyStringHigh
010560 c8                                  iny
010561 c8                                  iny
010562 c8                                  iny
010563 8c 01 ff                            sty $ff01             ; TXTPOS
010566 4f 5c 17 00 ff                      jsr.a24 ($ff0017)     ; os4_PrintCursor
01056b 4f 60                               rts.a24
01056d                 IF10534_end:
01056d e6 04                               inc $04
01056f a6 04                               ldx $04
010571 e0 05                               cpx #$5
010573 d0 a2                               bne -94               ; FOR10513_loop [10517]
010575                 FOR10513_end:
010575 4f 60                               rts.a24

010577 ; SUB ClearInputBuffers:
010577 a9 00                               lda #$0
010579                 FOR10579_start:
010579                                 ;; FOR X = 0 TO 255 {
010579 a2 00                               ldx #$0
01057b                 FOR10579_loop:
01057b 9d 00 01                            sta $0100,X           ; INPBUFFER
01057e e8                                  inx
01057f e0 00                               cpx #$100
010581 d0 f8                               bne -8                ; FOR10579_loop [1057b]
010583                 FOR10579_end:
010583 4f 60                               rts.a24

010585 ; SUB ClearCurrentInputBuffer:
010585 a9 00                               lda #$0
010587                 FOR10587_start:
010587                                 ;; FOR X = 0 TO 79 {
010587 a2 00                               ldx #$0
010589                 FOR10587_loop:
010589 9d 00 01                            sta $0100,X           ; INPBUFFER
01058c e8                                  inx
01058d e0 50                               cpx #$50
01058f d0 f8                               bne -8                ; FOR10587_loop [10589]
010591                 FOR10587_end:
010591 4f 60                               rts.a24

010593 ; SUB PrevToCurrentInputBuffer:
010593                 FOR10593_start:
010593                                 ;; FOR X = 0 TO 79 {
010593 a2 00                               ldx #$0
010595                 FOR10593_loop:
010595 bd 50 01                            lda $0150,X           ; INPBUFFER2
010598 9d 00 01                            sta $0100,X           ; INPBUFFER
01059b bd a0 01                            lda $01a0,X           ; INPBUFFER3
01059e 9d 50 01                            sta $0150,X           ; INPBUFFER2
0105a1 e8                                  inx
0105a2 e0 50                               cpx #$50
0105a4 d0 ef                               bne -17               ; FOR10593_loop [10595]
0105a6                 FOR10593_end:
0105a6 4f 60                               rts.a24

0105a8 ; SUB CurrentToPrevInputBuffer:
0105a8                 FOR105a8_start:
0105a8                                 ;; FOR X = 0 TO 79 {
0105a8 a2 00                               ldx #$0
0105aa                 FOR105a8_loop:
0105aa bd 50 01                            lda $0150,X           ; INPBUFFER2
0105ad 9d a0 01                            sta $01a0,X           ; INPBUFFER3
0105b0 bd 00 01                            lda $0100,X           ; INPBUFFER
0105b3 9d 50 01                            sta $0150,X           ; INPBUFFER2
0105b6 e8                                  inx
0105b7 e0 50                               cpx #$50
0105b9 d0 ef                               bne -17               ; FOR105a8_loop [105aa]
0105bb                 FOR105a8_end:
0105bb 4f 60                               rts.a24

0105bd ; SUB InputBufferToTextScreen:
0105bd a0 03                               ldy #$3
0105bf                 FOR105bf_start:
0105bf                                 ;; FOR X = 0 TO 79 {
0105bf a2 00                               ldx #$0
0105c1                 FOR105bf_loop:
0105c1 bd 00 01                            lda $0100,X           ; INPBUFFER
0105c4                                 ;; IF == 0 {
0105c4 c9 00                               cmp #$0
0105c6 d0 07                               bne +7                ; IF105c4_end [105cf]
0105c8 8c 01 ff                            sty $ff01             ; TXTPOS
0105cb                                 ;; BREAK
0105cb 4f 80 0a 00                         bra.a24 +10           ; for105bf_end [105d9]
0105cf                 IF105c4_end:
0105cf 09 80                               ora #$80
0105d1 91 fe                               sta ($fe),Y           ; TXTPTR
0105d3 c8                                  iny
0105d4 e8                                  inx
0105d5 e0 50                               cpx #$50
0105d7 d0 e8                               bne -24               ; FOR105bf_loop [105c1]
0105d9                 FOR105bf_end:
0105d9 a9 a0                               lda #$a0
0105db                 LOOP105db_start:
0105db                                 ;; LOOP {
0105db                 LOOP105db_loop:
0105db c0 28                               cpy #$28
0105dd                                 ;; IF == {
0105dd d0 04                               bne +4                ; IF105dd_end [105e3]
0105df                                 ;; BREAK
0105df 4f 80 05 00                         bra.a24 +5            ; loop105db_end [105e8]
0105e3                 IF105dd_end:
0105e3 91 fe                               sta ($fe),Y           ; TXTPTR
0105e5 c8                                  iny
0105e6 80 f3                               bra -13               ; LOOP105db_loop [105db]
0105e8                 LOOP105db_end:
0105e8 4f 60                               rts.a24

0105ea ; DATA Header:
0105ea 28 46 6f 6e 74 29 20 46 4e 54 20 45 64 69 74 20 5d 5b 34 00

0105fe ; DATA HelpListStr:
0105fe 20 46 4e 54 20 45 64 69 74 20 43 4f 4d 4d 41 4e 44 53 3a 00

010612 ; DATA LoadedStr:
010612 4c 4f 41 44 45 44 3a 20 00

01061b ; DATA StoredStr:
01061b 53 54 4f 52 45 44 3a 20 00

010624 ; DATA FontFileType:
010624 46 4e 54 00

010628 ; DATA UnknownCommandErr:
010628 2a 2a 20 45 52 52 4f 52 3a 20 55 6e 6b 6e 6f 77 6e 20 63 6f 6d 6d 61 6e 64 00

010642 ; DATA NoFilenameErrStr:
010642 2a 2a 20 46 49 4c 45 4e 41 4d 45 20 6d 75 73 74 20 62 65 20 73 70 65 63 69 66 69 65 64 00

010660 ; DATA NoFontNameErrStr:
010660 2a 2a 2a 20 46 4f 4e 54 20 4e 41 4d 45 20 6d 75 73 74 20 62 65 20 73 70 65 63 69 66 69 65 64 00

010680 ; DATA MissingValueErr:
010680 2a 2a 20 45 52 52 4f 52 3a 20 4d 69 73 73 69 6e 67 20 56 41 4c 55 45 00

010698 ; DATA NoFontFoundErr:
010698 2a 2a 2a 20 54 68 65 20 46 4f 4e 54 20 77 61 73 20 4e 4f 54 20 66 6f 75 6e 64 00

0106b3 ; DATA NotFontFileErr:
0106b3 2a 2a 2a 20 54 68 65 20 66 69 6c 65 20 69 73 20 6e 6f 74 20 6f 66 20 74 79 70 65 20 46 4e 54 00

0106d3 ; DATA FontLoadFailedErr:
0106d3 2a 2a 2a 20 46 4f 4e 54 20 6c 6f 61 64 20 46 41 49 4c 45 44 00

0106e8 ; DATA ASCII_Numbers:
0106e8 30 31 32 33 34 35 36 37 38 39 30 20 2b 2d 3d 28 29 5b 5d 7b 7d 3b 3a 2c 2e 00

010702 ; DATA ASCII_Uppercase:
010702 41 42 43 44 45 46 47 48 49 4a 4b 4c 4d 4e 4f 50 51 52 53 54 55 56 57 58 59 5a 00

01071d ; DATA ASCII_Lowercase:
01071d 61 62 63 64 65 66 67 68 69 6a 6b 6c 6d 6e 6f 70 71 72 73 74 75 76 77 78 79 7a 00

010738 ; DATA GraphicsOffsets:
010738 00 00
01073a 40 00
01073c 80 00
01073e c0 00
010740 00 01
010742 40 01
010744 80 01
010746 c0 01
010748 00 02
01074a 40 02
01074c 80 02
01074e c0 02
010750 00 03
010752 40 03
010754 80 03
010756 c0 03
010758 00 04
01075a 40 04
01075c 80 04
01075e c0 04
010760 00 05
010762 40 05
010764 80 05
010766 c0 05
010768 00 06
01076a 40 06
01076c 80 06
01076e c0 06
010770 00 07
010772 40 07
010774 80 07
010776 c0 07
010778 00 08
01077a 40 08
01077c 80 08
01077e c0 08
010780 00 09
010782 40 09
010784 80 09
010786 c0 09
010788 00 0a
01078a 40 0a
01078c 80 0a
01078e c0 0a
010790 00 0b
010792 40 0b
010794 80 0b
010796 c0 0b
010798 00 0c
01079a 40 0c
01079c 80 0c
01079e c0 0c
0107a0 00 0d
0107a2 40 0d
0107a4 80 0d
0107a6 c0 0d
0107a8 00 0e
0107aa 40 0e
0107ac 80 0e
0107ae c0 0e
0107b0 00 0f
0107b2 40 0f
0107b4 80 0f
0107b6 c0 0f

0107b8 ; DATA CMD_Help:
0107b8 3f 00

0107ba ; DATA CMD_Clear:
0107ba 63 6c 65 61 72 00

0107c0 ; DATA CMD_Char:
0107c0 63 68 61 72 00

0107c5 ; DATA CMD_Font:
0107c5 66 6f 6e 74 00

0107ca ; DATA CMD_Quit:
0107ca 71 75 69 74 00

0107cf ; DATA CommandList:
0107cf b8 07 01
0107d2 63 01 01
0107d5 ba 07 01
0107d8 1b 02 01
0107db c0 07 01
0107de ed 03 01
0107e1 c5 07 01
0107e4 24 02 01
0107e7 ca 07 01
0107ea 1c 04 01
