0000fe-0000ff   ; GLOBAL @TXTPTR
0000fd          ; GLOBAL @TXTWIDTH
00ff00          ; GLOBAL @TXTROW
00ff01          ; GLOBAL @TXTPOS
00ff02          ; GLOBAL @TXTPGROWS
00ff03          ; GLOBAL @DISPMODE
00ff04          ; GLOBAL @PREVDISP
00ff05          ; GLOBAL @CURCHR
00ff06          ; GLOBAL @PMPTCHR
00ff10-00ff12   ; GLOBAL @RAMTOP
00ff13-00ff15   ; GLOBAL @HEAPSTART
00ff16-00ff18   ; GLOBAL @RUNLENGTH
00fe00          ; GLOBAL @TYPBUFFER
00fe50          ; GLOBAL @TYPBUFFER2
00fea0          ; GLOBAL @TYPBUFFER3
00c0f0          ; GLOBAL @DISK4_CMD
00c0f1          ; GLOBAL @DISK4_PARAM0
00c0f4          ; GLOBAL @DISK4_PARAM1
00c0f7          ; GLOBAL @DISK4_RET0
00c0fa          ; GLOBAL @DISK4_RET1
00c0fd          ; GLOBAL @DISK4_RET2
00c0ff          ; GLOBAL @DISK4_GO
00c800          ; GLOBAL @DISK4_RAM
00c700          ; GLOBAL @SLOT_7_ROM
00c800          ; GLOBAL @PR_RAM
000800          ; GLOBAL @LORES2BASE
000100          ; GLOBAL @INPBUFFER
000150          ; GLOBAL @INPBUFFER2
0001a0          ; GLOBAL @INPBUFFER3
000080          ; GLOBAL @COLOR
000081          ; GLOBAL @CURSORX
000082          ; GLOBAL @CURSORY
000083          ; GLOBAL @HIDECUR
000084          ; GLOBAL @CURSAVE
000085          ; GLOBAL @PENDOWN

010000 ; SUB LO_Edit:
00d000          ; VAR @NPRM
00d001-00d003   ; VAR @CMD
00d004-00d006   ; VAR @FILENAME
010000 a9 a0                               lda #$a0              ; DISP_LORES_2
010002 4f 5c 08 00 ff                      jsr.a24 ($ff0008)     ; os4_SetScreenMode
010007 4f 5c 41 00 ff                      jsr.a24 ($ff0041)     ; os4_ClearLores
01000c a9 02                               lda #$2
01000e 8d 00 ff                            sta $ff00             ; TXTROW
010011 9c 01 ff                            stz $ff01             ; TXTPOS
010014 a2 00                               ldx #$0
010016 4f 5c 3e 00 ff                      jsr.a24 ($ff003e)     ; os4_ClearScreen
01001b a9 01                               lda #$1               ; CLR_RED
01001d 85 80                               sta $80               ; COLOR
01001f 64 81                               stz $81               ; CURSORX
010021 64 82                               stz $82               ; CURSORY
010023 64 83                               stz $83               ; HIDECUR
010025 64 84                               stz $84               ; CURSAVE
010027 64 85                               stz $85               ; PENDOWN
010029                 FOR10029_start:
010029                                 ;; FOR X = 0 TO 39 {
010029 a2 00                               ldx #$0
01002b                 FOR10029_loop:
01002b 4f bd 13 0a 01                      lda.a24 $010a13,X     ; Header
010030 f0 0a                               beq +10               ; for10029_end [1003c]
010032 09 80                               ora #$80
010034 9d 06 04                            sta $0406,X
010037 e8                                  inx
010038 e0 28                               cpx #$28
01003a d0 ef                               bne -17               ; FOR10029_loop [1002b]
01003c                 FOR10029_end:
01003c ad 00 d0                            lda $d000             ; NPRM
01003f                                 ;; IF != {
01003f f0 05                               beq +5                ; IF1003f_end [10046]
010041 4f 20 aa 05 01                      jsr.a24 $0105aa       ; DoLoad
010046                 IF1003f_end:
010046 4f 20 2b 02 01                      jsr.a24 $01022b       ; saveBehindCursor
01004b 4f 20 55 02 01                      jsr.a24 $010255       ; drawCursor
010050 4f 20 22 09 01                      jsr.a24 $010922       ; ClearInputBuffers
010055                 LOOP10055_start:
010055                                 ;; LOOP {
010055                 LOOP10055_loop:
010055 4f 5c 0b 00 ff                      jsr.a24 ($ff000b)     ; os4_SetScreenBase
01005a ad 01 ff                            lda $ff01             ; TXTPOS
01005d                                 ;; IF == {
01005d d0 1b                               bne +27               ; IF1005d_end [1007a]
01005f a9 cc                               lda #$cc
010061 4f 5c 11 00 ff                      jsr.a24 ($ff0011)     ; os4_PrintChar
010066 a9 cf                               lda #$cf
010068 4f 5c 11 00 ff                      jsr.a24 ($ff0011)     ; os4_PrintChar
01006d ad 06 ff                            lda $ff06             ; PMPTCHR
010070 4f 5c 11 00 ff                      jsr.a24 ($ff0011)     ; os4_PrintChar
010075 4f 5c 17 00 ff                      jsr.a24 ($ff0017)     ; os4_PrintCursor
01007a                 IF1005d_end:
01007a                 LOOP1007a_start:
01007a                                 ;; LOOP {
01007a                 LOOP1007a_loop:
01007a 2c 00 c0                            bit $c000             ; KBD
01007d                                 ;; IF - {
01007d 10 04                               bpl +4                ; IF1007d_end [10083]
01007f                                 ;; BREAK
01007f 4f 80 02 00                         bra.a24 +2            ; loop1007a_end [10085]
010083                 IF1007d_end:
010083 80 f5                               bra -11               ; LOOP1007a_loop [1007a]
010085                 LOOP1007a_end:
010085 ad 00 c0                            lda $c000             ; KBD
010088 2c 10 c0                            bit $c010             ; KBDSTRB
01008b                                 ;; IF == 141 {
01008b c9 8d                               cmp #$8d
01008d d0 2c                               bne +44               ; IF1008b_end [100bb]
01008f 4f 5c 1a 00 ff                      jsr.a24 ($ff001a)     ; os4_ClearCursor
010094 4f 5c 35 00 ff                      jsr.a24 ($ff0035)     ; os4_NextLine
010099 4f 20 53 09 01                      jsr.a24 $010953       ; CurrentToPrevInputBuffer
01009e 9c ff d0                            stz $d0ff
0100a1 4f 20 28 08 01                      jsr.a24 $010828       ; CommandLine
0100a6 8d ff d0                            sta $d0ff
0100a9 4f 20 30 09 01                      jsr.a24 $010930       ; ClearCurrentInputBuffer
0100ae ad ff d0                            lda $d0ff
0100b1                                 ;; IF == 255 {
0100b1 c9 ff                               cmp #$ff
0100b3 d0 04                               bne +4                ; IF100b1_end [100b9]
0100b5 a9 00                               lda #$0
0100b7 4f 60                               rts.a24
0100b9                 IF100b1_end:
0100b9                                 ;; CONTINUE
0100b9 80 9a                               bra -102              ; loop10055_start [10055]
0100bb                 IF1008b_end:
0100bb                                 ;; IF == 255 {
0100bb c9 ff                               cmp #$ff
0100bd d0 28                               bne +40               ; IF100bb_end [100e7]
0100bf ad 01 ff                            lda $ff01             ; TXTPOS
0100c2                                 ;; IF > 3 {
0100c2 c9 03                               cmp #$3
0100c4 f0 1d                               beq +29               ; IF100c2_end [100e3]
0100c6 90 1b                               bcc +27               ; IF100c2_end [100e3]
0100c8 4f 5c 1a 00 ff                      jsr.a24 ($ff001a)     ; os4_ClearCursor
0100cd a9 a0                               lda #$a0
0100cf ac 01 ff                            ldy $ff01             ; TXTPOS
0100d2 88                                  dey
0100d3 91 fe                               sta ($fe),Y           ; TXTPTR
0100d5 88                                  dey
0100d6 a9 00                               lda #$0
0100d8 99 00 01                            sta $0100,Y           ; INPBUFFER
0100db ce 01 ff                            dec $ff01             ; TXTPOS
0100de 4f 5c 17 00 ff                      jsr.a24 ($ff0017)     ; os4_PrintCursor
0100e3                 IF100c2_end:
0100e3                                 ;; CONTINUE
0100e3 4f 80 6e ff                         bra.a24 -146          ; loop10055_start [10055]
0100e7                 IF100bb_end:
0100e7                                 ;; IF == 137 {
0100e7 c9 89                               cmp #$89
0100e9 d0 09                               bne +9                ; IF100e7_end [100f4]
0100eb 4f 20 b6 08 01                      jsr.a24 $0108b6       ; CompleteCommand
0100f0                                 ;; CONTINUE
0100f0 4f 80 61 ff                         bra.a24 -159          ; loop10055_start [10055]
0100f4                 IF100e7_end:
0100f4                                 ;; IF == 154 {
0100f4 c9 9a                               cmp #$9a
0100f6 d0 13                               bne +19               ; IF100f4_end [1010b]
0100f8 4f 20 3e 09 01                      jsr.a24 $01093e       ; PrevToCurrentInputBuffer
0100fd 4f 20 68 09 01                      jsr.a24 $010968       ; InputBufferToTextScreen
010102 4f 5c 17 00 ff                      jsr.a24 ($ff0017)     ; os4_PrintCursor
010107                                 ;; CONTINUE
010107 4f 80 4a ff                         bra.a24 -182          ; loop10055_start [10055]
01010b                 IF100f4_end:
01010b                                 ;; IF == 155 {
01010b c9 9b                               cmp #$9b
01010d d0 16                               bne +22               ; IF1010b_end [10125]
01010f ad 03 ff                            lda $ff03             ; DISPMODE
010112 29 20                               and #$20              ; DISP_LORES
010114                                 ;; IF == {
010114 d0 04                               bne +4                ; IF10114_else [1011a]
010116 a9 a0                               lda #$a0              ; DISP_LORES_2
010118 80 02                               bra +2                ; IF10114_end [1011c]
01011a                 IF10114_else:
01011a                                 ;; ELSE
01011a a9 00                               lda #$0               ; DISP_TEXT_1
01011c                 IF10114_end:
01011c 4f 5c 08 00 ff                      jsr.a24 ($ff0008)     ; os4_SetScreenMode
010121                                 ;; CONTINUE
010121 4f 80 30 ff                         bra.a24 -208          ; loop10055_start [10055]
010125                 IF1010b_end:
010125                                 ;; IF == 136 {
010125 c9 88                               cmp #$88
010127 d0 27                               bne +39               ; IF10125_end [10150]
010129 4f 20 40 02 01                      jsr.a24 $010240       ; restoreBehindCursor
01012e a5 85                               lda $85               ; PENDOWN
010130                                 ;; IF != {
010130 f0 05                               beq +5                ; IF10130_end [10137]
010132 4f 20 7a 02 01                      jsr.a24 $01027a       ; drawPixel
010137                 IF10130_end:
010137 a5 81                               lda $81               ; CURSORX
010139 c9 00                               cmp #$0
01013b                                 ;; IF > {
01013b f0 05                               beq +5                ; IF1013b_end [10142]
01013d 90 03                               bcc +3                ; IF1013b_end [10142]
01013f 3a                                  dec
010140 85 81                               sta $81               ; CURSORX
010142                 IF1013b_end:
010142 4f 20 2b 02 01                      jsr.a24 $01022b       ; saveBehindCursor
010147 4f 20 55 02 01                      jsr.a24 $010255       ; drawCursor
01014c                                 ;; CONTINUE
01014c 4f 80 05 ff                         bra.a24 -251          ; loop10055_start [10055]
010150                 IF10125_end:
010150                                 ;; IF == 149 {
010150 c9 95                               cmp #$95
010152 d0 25                               bne +37               ; IF10150_end [10179]
010154 4f 20 40 02 01                      jsr.a24 $010240       ; restoreBehindCursor
010159 a5 85                               lda $85               ; PENDOWN
01015b                                 ;; IF != {
01015b f0 05                               beq +5                ; IF1015b_end [10162]
01015d 4f 20 7a 02 01                      jsr.a24 $01027a       ; drawPixel
010162                 IF1015b_end:
010162 a5 81                               lda $81               ; CURSORX
010164 c9 27                               cmp #$27
010166                                 ;; IF < {
010166 b0 03                               bcs +3                ; IF10166_end [1016b]
010168 1a                                  inc
010169 85 81                               sta $81               ; CURSORX
01016b                 IF10166_end:
01016b 4f 20 2b 02 01                      jsr.a24 $01022b       ; saveBehindCursor
010170 4f 20 55 02 01                      jsr.a24 $010255       ; drawCursor
010175                                 ;; CONTINUE
010175 4f 80 dc fe                         bra.a24 -292          ; loop10055_start [10055]
010179                 IF10150_end:
010179                                 ;; IF == 139 {
010179 c9 8b                               cmp #$8b
01017b d0 27                               bne +39               ; IF10179_end [101a4]
01017d 4f 20 40 02 01                      jsr.a24 $010240       ; restoreBehindCursor
010182 a5 85                               lda $85               ; PENDOWN
010184                                 ;; IF != {
010184 f0 05                               beq +5                ; IF10184_end [1018b]
010186 4f 20 7a 02 01                      jsr.a24 $01027a       ; drawPixel
01018b                 IF10184_end:
01018b a5 82                               lda $82               ; CURSORY
01018d c9 00                               cmp #$0
01018f                                 ;; IF > {
01018f f0 05                               beq +5                ; IF1018f_end [10196]
010191 90 03                               bcc +3                ; IF1018f_end [10196]
010193 3a                                  dec
010194 85 82                               sta $82               ; CURSORY
010196                 IF1018f_end:
010196 4f 20 2b 02 01                      jsr.a24 $01022b       ; saveBehindCursor
01019b 4f 20 55 02 01                      jsr.a24 $010255       ; drawCursor
0101a0                                 ;; CONTINUE
0101a0 4f 80 b1 fe                         bra.a24 -335          ; loop10055_start [10055]
0101a4                 IF10179_end:
0101a4                                 ;; IF == 138 {
0101a4 c9 8a                               cmp #$8a
0101a6 d0 25                               bne +37               ; IF101a4_end [101cd]
0101a8 4f 20 40 02 01                      jsr.a24 $010240       ; restoreBehindCursor
0101ad a5 85                               lda $85               ; PENDOWN
0101af                                 ;; IF != {
0101af f0 05                               beq +5                ; IF101af_end [101b6]
0101b1 4f 20 7a 02 01                      jsr.a24 $01027a       ; drawPixel
0101b6                 IF101af_end:
0101b6 a5 82                               lda $82               ; CURSORY
0101b8 c9 2f                               cmp #$2f
0101ba                                 ;; IF < {
0101ba b0 03                               bcs +3                ; IF101ba_end [101bf]
0101bc 1a                                  inc
0101bd 85 82                               sta $82               ; CURSORY
0101bf                 IF101ba_end:
0101bf 4f 20 2b 02 01                      jsr.a24 $01022b       ; saveBehindCursor
0101c4 4f 20 55 02 01                      jsr.a24 $010255       ; drawCursor
0101c9                                 ;; CONTINUE
0101c9 4f 80 88 fe                         bra.a24 -376          ; loop10055_start [10055]
0101cd                 IF101a4_end:
0101cd                                 ;; IF == 174 {
0101cd c9 ae                               cmp #$ae
0101cf d0 08                               bne +8                ; IF101cd_end [101d9]
0101d1 a9 01                               lda #$1
0101d3 85 85                               sta $85               ; PENDOWN
0101d5                                 ;; CONTINUE
0101d5 4f 80 7c fe                         bra.a24 -388          ; loop10055_start [10055]
0101d9                 IF101cd_end:
0101d9                                 ;; IF == 175 {
0101d9 c9 af                               cmp #$af
0101db d0 06                               bne +6                ; IF101d9_end [101e3]
0101dd 64 85                               stz $85               ; PENDOWN
0101df                                 ;; CONTINUE
0101df 4f 80 72 fe                         bra.a24 -398          ; loop10055_start [10055]
0101e3                 IF101d9_end:
0101e3                                 ;; IF == 173 {
0101e3 c9 ad                               cmp #$ad
0101e5 d0 0d                               bne +13               ; IF101e3_end [101f4]
0101e7 a9 01                               lda #$1
0101e9 85 83                               sta $83               ; HIDECUR
0101eb 4f 20 40 02 01                      jsr.a24 $010240       ; restoreBehindCursor
0101f0                                 ;; CONTINUE
0101f0 4f 80 61 fe                         bra.a24 -415          ; loop10055_start [10055]
0101f4                 IF101e3_end:
0101f4                                 ;; IF == 171 {
0101f4 c9 ab                               cmp #$ab
0101f6 d0 10                               bne +16               ; IF101f4_end [10208]
0101f8 64 83                               stz $83               ; HIDECUR
0101fa 4f 20 2b 02 01                      jsr.a24 $01022b       ; saveBehindCursor
0101ff 4f 20 55 02 01                      jsr.a24 $010255       ; drawCursor
010204                                 ;; CONTINUE
010204 4f 80 4d fe                         bra.a24 -435          ; loop10055_start [10055]
010208                 IF101f4_end:
010208                                 ;; IF > 159 {
010208 c9 9f                               cmp #$9f
01020a f0 1b                               beq +27               ; IF10208_end [10227]
01020c 90 19                               bcc +25               ; IF10208_end [10227]
01020e ac 01 ff                            ldy $ff01             ; TXTPOS
010211 4f 5c 11 00 ff                      jsr.a24 ($ff0011)     ; os4_PrintChar
010216 c0 28                               cpy #$28
010218                                 ;; IF < {
010218 b0 0d                               bcs +13               ; IF10218_end [10227]
01021a 29 7f                               and #$7f
01021c 88                                  dey
01021d 88                                  dey
01021e 88                                  dey
01021f 99 00 01                            sta $0100,Y           ; INPBUFFER
010222 4f 5c 17 00 ff                      jsr.a24 ($ff0017)     ; os4_PrintCursor
010227                 IF10218_end:
010227                 IF10208_end:
010227 4f 80 2a fe                         bra.a24 -470          ; LOOP10055_loop [10055]
01022b                 LOOP10055_end:

01022b ; SUB saveBehindCursor:
0000b4-0000b5   ; VAR @ROWPTR
01022b a5 82                               lda $82               ; CURSORY
01022d 29 fe                               and #$fe
01022f aa                                  tax
010230 5f bd 53 0b 01                      lda.w.a24 $010b53,X   ; LoresScreenBase
010235 a4 81                               ldy $81               ; CURSORX
010237 1f 85 b4                            sta.w $b4             ; ROWPTR
01023a b1 b4                               lda ($b4),Y           ; ROWPTR
01023c 85 84                               sta $84               ; CURSAVE
01023e 4f 60                               rts.a24

010240 ; SUB restoreBehindCursor:
0000b4-0000b5   ; VAR @ROWPTR
010240 a5 82                               lda $82               ; CURSORY
010242 29 fe                               and #$fe
010244 aa                                  tax
010245 5f bd 53 0b 01                      lda.w.a24 $010b53,X   ; LoresScreenBase
01024a a4 81                               ldy $81               ; CURSORX
01024c 1f 85 b4                            sta.w $b4             ; ROWPTR
01024f a5 84                               lda $84               ; CURSAVE
010251 91 b4                               sta ($b4),Y           ; ROWPTR
010253 4f 60                               rts.a24

010255 ; SUB drawCursor:
0000b4-0000b5   ; VAR @ROWPTR
0000b3          ; VAR @CURPXL
010255 a5 82                               lda $82               ; CURSORY
010257 29 01                               and #$1
010259                                 ;; IF == {
010259 d0 04                               bne +4                ; IF10259_else [1025f]
01025b a9 0f                               lda #$f
01025d 80 02                               bra +2                ; IF10259_end [10261]
01025f                 IF10259_else:
01025f                                 ;; ELSE
01025f a9 f0                               lda #$f0
010261                 IF10259_end:
010261 85 b3                               sta $b3               ; CURPXL
010263 a5 82                               lda $82               ; CURSORY
010265 29 fe                               and #$fe
010267 aa                                  tax
010268 5f bd 53 0b 01                      lda.w.a24 $010b53,X   ; LoresScreenBase
01026d a4 81                               ldy $81               ; CURSORX
01026f 1f 85 b4                            sta.w $b4             ; ROWPTR
010272 b1 b4                               lda ($b4),Y           ; ROWPTR
010274 05 b3                               ora $b3               ; CURPXL
010276 91 b4                               sta ($b4),Y           ; ROWPTR
010278 4f 60                               rts.a24

01027a ; SUB drawPixel:
0000b4-0000b5   ; VAR @ROWPTR
0000b3          ; VAR @CURMSK
0000b2          ; VAR @CURPXL
01027a a5 82                               lda $82               ; CURSORY
01027c 29 01                               and #$1
01027e                                 ;; IF == {
01027e d0 0a                               bne +10               ; IF1027e_else [1028a]
010280 a9 f0                               lda #$f0
010282 85 b3                               sta $b3               ; CURMSK
010284 a5 80                               lda $80               ; COLOR
010286 85 b2                               sta $b2               ; CURPXL
010288 80 0c                               bra +12               ; IF1027e_end [10296]
01028a                 IF1027e_else:
01028a                                 ;; ELSE
01028a a9 0f                               lda #$f
01028c 85 b3                               sta $b3               ; CURMSK
01028e a5 80                               lda $80               ; COLOR
010290 0a                                  asl
010291 0a                                  asl
010292 0a                                  asl
010293 0a                                  asl
010294 85 b2                               sta $b2               ; CURPXL
010296                 IF1027e_end:
010296 a5 82                               lda $82               ; CURSORY
010298 29 fe                               and #$fe
01029a aa                                  tax
01029b 5f bd 53 0b 01                      lda.w.a24 $010b53,X   ; LoresScreenBase
0102a0 a4 81                               ldy $81               ; CURSORX
0102a2 1f 85 b4                            sta.w $b4             ; ROWPTR
0102a5 b1 b4                               lda ($b4),Y           ; ROWPTR
0102a7 25 b3                               and $b3               ; CURMSK
0102a9 05 b2                               ora $b2               ; CURPXL
0102ab 91 b4                               sta ($b4),Y           ; ROWPTR
0102ad 4f 60                               rts.a24

0102af ; SUB DoHelp:
000004          ; VAR @I
000005          ; VAR @I6
000006          ; VAR @COL
0102af 4f 5c 2f 00 ff                      jsr.a24 ($ff002f)     ; os4_ResetPaginate
0102b4 a9 16                               lda #$16              ; PAGINATE_LINES_PER_PAGE
0102b6 8d 00 d7                            sta $d700
0102b9 4f 5c 32 00 ff                      jsr.a24 ($ff0032)     ; os4_PaginateLine
0102be 2f a9 30 0a 01                      lda.t #$10a30         ; HelpPenStr
0102c3 2f 8d 00 d7                         sta.t $00d700
0102c7 4f 5c 1d 00 ff                      jsr.a24 ($ff001d)     ; os4_PrintString
0102cc a9 16                               lda #$16              ; PAGINATE_LINES_PER_PAGE
0102ce 8d 00 d7                            sta $d700
0102d1 4f 5c 32 00 ff                      jsr.a24 ($ff0032)     ; os4_PaginateLine
0102d6 2f a9 3e 0a 01                      lda.t #$10a3e         ; HelpPenUpStr
0102db 2f 8d 00 d7                         sta.t $00d700
0102df 4f 5c 1d 00 ff                      jsr.a24 ($ff001d)     ; os4_PrintString
0102e4 a9 16                               lda #$16              ; PAGINATE_LINES_PER_PAGE
0102e6 8d 00 d7                            sta $d700
0102e9 4f 5c 32 00 ff                      jsr.a24 ($ff0032)     ; os4_PaginateLine
0102ee 2f a9 4a 0a 01                      lda.t #$10a4a         ; HelpHideCursorStr
0102f3 2f 8d 00 d7                         sta.t $00d700
0102f7 4f 5c 1d 00 ff                      jsr.a24 ($ff001d)     ; os4_PrintString
0102fc a9 16                               lda #$16              ; PAGINATE_LINES_PER_PAGE
0102fe 8d 00 d7                            sta $d700
010301 4f 5c 32 00 ff                      jsr.a24 ($ff0032)     ; os4_PaginateLine
010306 2f a9 5b 0a 01                      lda.t #$10a5b         ; HelpShowCursorStr
01030b 2f 8d 00 d7                         sta.t $00d700
01030f 4f 5c 1d 00 ff                      jsr.a24 ($ff001d)     ; os4_PrintString
010314 a9 16                               lda #$16              ; PAGINATE_LINES_PER_PAGE
010316 8d 00 d7                            sta $d700
010319 4f 5c 32 00 ff                      jsr.a24 ($ff0032)     ; os4_PaginateLine
01031e 4f 5c 32 00 ff                      jsr.a24 ($ff0032)     ; os4_PaginateLine
010323 2f a9 6c 0a 01                      lda.t #$10a6c         ; HelpSetColorStr
010328 2f 8d 00 d7                         sta.t $00d700
01032c 4f 5c 1d 00 ff                      jsr.a24 ($ff001d)     ; os4_PrintString
010331 a9 16                               lda #$16              ; PAGINATE_LINES_PER_PAGE
010333 8d 00 d7                            sta $d700
010336 4f 5c 32 00 ff                      jsr.a24 ($ff0032)     ; os4_PaginateLine
01033b 4f 5c 32 00 ff                      jsr.a24 ($ff0032)     ; os4_PaginateLine
010340 2f a9 82 0a 01                      lda.t #$10a82         ; HelpListStr
010345 2f 8d 00 d7                         sta.t $00d700
010349 4f 5c 1d 00 ff                      jsr.a24 ($ff001d)     ; os4_PrintString
01034e a9 16                               lda #$16              ; PAGINATE_LINES_PER_PAGE
010350 8d 00 d7                            sta $d700
010353 4f 5c 32 00 ff                      jsr.a24 ($ff0032)     ; os4_PaginateLine
010358 4f 5c 32 00 ff                      jsr.a24 ($ff0032)     ; os4_PaginateLine
01035d                       ;; M@$4 = 1 
01035d 85 00                               sta $00
01035f a9 01                               lda #$1
010361 85 04                               sta $04
010363 a5 00                               lda $00
010365                       ;; M@$6 = 0 
010365 85 00                               sta $00
010367 a9 00                               lda #$0
010369 85 06                               sta $06
01036b a5 00                               lda $00
01036d                 DO1036d_start:
01036d                                 ;; DO {
01036d                 DO1036d_loop:
01036d 4f 5c 14 00 ff                      jsr.a24 ($ff0014)     ; os4_PrintSpace
010372 a5 04                               lda $04               ; I
010374                       ;; A <<= 2 
010374 0a                                  asl
010375 0a                                  asl
010376 85 05                               sta $05               ; I6
010378 a5 04                               lda $04               ; I
01037a                       ;; A <<= 1 
01037a 0a                                  asl
01037b 18                                  clc
01037c 65 05                               adc $05               ; I6
01037e 85 05                               sta $05               ; I6
010380 aa                                  tax
010381 6f bd b6 0b 01                      lda.t.a24 $010bb6,X   ; CommandList
010386 2f 8d 00 d7                         sta.t $00d700
01038a 4f 5c 1d 00 ff                      jsr.a24 ($ff001d)     ; os4_PrintString
01038f a5 06                               lda $06               ; COL
010391                                 ;; IF == {
010391 d0 13                               bne +19               ; IF10391_else [103a6]
010393                       ;; M@$6 = 1 
010393 85 00                               sta $00
010395 a9 01                               lda #$1
010397 85 06                               sta $06
010399 a5 00                               lda $00
01039b                       ;; M@$ff01 = 12 
01039b 85 00                               sta $00
01039d a9 0c                               lda #$c
01039f 8d 01 ff                            sta $ff01
0103a2 a5 00                               lda $00
0103a4 80 2b                               bra +43               ; IF10391_end [103d1]
0103a6                 IF10391_else:
0103a6                                 ;; ELSE
0103a6                                 ;; IF == 1 {
0103a6 c9 01                               cmp #$1
0103a8 d0 11                               bne +17               ; IF103a6_end [103bb]
0103aa                       ;; M@$6 = 2 
0103aa 85 00                               sta $00
0103ac a9 02                               lda #$2
0103ae 85 06                               sta $06
0103b0 a5 00                               lda $00
0103b2                       ;; M@$ff01 = 24 
0103b2 85 00                               sta $00
0103b4 a9 18                               lda #$18
0103b6 8d 01 ff                            sta $ff01
0103b9 a5 00                               lda $00
0103bb                 IF103a6_end:
0103bb                                 ;; IF == 2 {
0103bb c9 02                               cmp #$2
0103bd d0 12                               bne +18               ; IF103bb_end [103d1]
0103bf                       ;; M@$6 = 0 
0103bf 85 00                               sta $00
0103c1 a9 00                               lda #$0
0103c3 85 06                               sta $06
0103c5 a5 00                               lda $00
0103c7 a9 16                               lda #$16              ; PAGINATE_LINES_PER_PAGE
0103c9 8d 00 d7                            sta $d700
0103cc 4f 5c 32 00 ff                      jsr.a24 ($ff0032)     ; os4_PaginateLine
0103d1                 IF103bb_end:
0103d1                 IF10391_end:
0103d1 e6 04                               inc $04               ; I
0103d3 a5 04                               lda $04               ; I
0103d5                                 ;; WHILE < 11
0103d5 c9 0b                               cmp #$b
0103d7 b0 02                               bcs +2                ; DO1036d_end [103db]
0103d9 80 92                               bra -110              ; DO1036d_loop [1036d]
0103db                 DO1036d_end:
0103db 4f 5c 35 00 ff                      jsr.a24 ($ff0035)     ; os4_NextLine
0103e0 4f 5c 35 00 ff                      jsr.a24 ($ff0035)     ; os4_NextLine
0103e5 a9 00                               lda #$0
0103e7 4f 60                               rts.a24

0103e9 ; SUB DoColor:
00d000          ; VAR @NPRM
00d001          ; VAR @CMD
00d004          ; VAR @SETCOLOR
0103e9 ad 00 d0                            lda $d000             ; NPRM
0103ec                                 ;; IF < 1 {
0103ec c9 01                               cmp #$1
0103ee b0 10                               bcs +16               ; IF103ec_end [10400]
0103f0 2f a9 e3 0a 01                      lda.t #$10ae3         ; MissingColorErr
0103f5 2f 8d 00 d7                         sta.t $00d700
0103f9 4f 5c 20 00 ff                      jsr.a24 ($ff0020)     ; os4_PrintError
0103fe 4f 60                               rts.a24
010400                 IF103ec_end:
010400 2f ad 04 d0                         lda.t $00d004         ; SETCOLOR
010404 2f 8d 00 d7                         sta.t $00d700
010408 4f 5c 59 00 ff                      jsr.a24 ($ff0059)     ; os4_ParseNumber
01040d 29 0f                               and #$f
01040f 85 80                               sta $80               ; COLOR
010411 a9 00                               lda #$0
010413 4f 60                               rts.a24

010415 ; SUB DoClear:
010415 4f 5c 41 00 ff                      jsr.a24 ($ff0041)     ; os4_ClearLores
01041a a9 00                               lda #$0
01041c 4f 60                               rts.a24

01041e ; SUB DoFill:
00d000          ; VAR @NPRM
00d001          ; VAR @CMD
00d004          ; VAR @FILLCOLOR
01041e ad 00 d0                            lda $d000             ; NPRM
010421                                 ;; IF < 1 {
010421 c9 01                               cmp #$1
010423 b0 12                               bcs +18               ; IF10421_else [10437]
010425 2f a9 01 0b 01                      lda.t #$10b01         ; MissingValueErr
01042a 2f 8d 00 d7                         sta.t $00d700
01042e 4f 5c 20 00 ff                      jsr.a24 ($ff0020)     ; os4_PrintError
010433 4f 60                               rts.a24
010435 80 0d                               bra +13               ; IF10421_end [10444]
010437                 IF10421_else:
010437                                 ;; ELSE
010437 2f ad 04 d0                         lda.t $00d004         ; FILLCOLOR
01043b 2f 8d 00 d7                         sta.t $00d700
01043f 4f 5c 59 00 ff                      jsr.a24 ($ff0059)     ; os4_ParseNumber
010444                 IF10421_end:
010444 4f 20 f8 07 01                      jsr.a24 $0107f8       ; FillScreen
010449 a9 00                               lda #$0
01044b 4f 60                               rts.a24

01044d ; SUB DoHLine:
00d000          ; VAR @NPRM
00d001          ; VAR @CMD
00d004          ; VAR @STARTPOS
00d007          ; VAR @ENDPOS
0000b4-0000b5   ; VAR @ROWPTR
0000b3          ; VAR @CURMSK
0000b2          ; VAR @CURPXL
01044d ad 00 d0                            lda $d000             ; NPRM
010450                                 ;; IF < 1 {
010450 c9 01                               cmp #$1
010452 b0 10                               bcs +16               ; IF10450_end [10464]
010454 2f a9 19 0b 01                      lda.t #$10b19         ; MissingStartErr
010459 2f 8d 00 d7                         sta.t $00d700
01045d 4f 5c 20 00 ff                      jsr.a24 ($ff0020)     ; os4_PrintError
010462 4f 60                               rts.a24
010464                 IF10450_end:
010464                                 ;; IF < 2 {
010464 c9 02                               cmp #$2
010466 b0 10                               bcs +16               ; IF10464_end [10478]
010468 2f a9 37 0b 01                      lda.t #$10b37         ; MissingEndErr
01046d 2f 8d 00 d7                         sta.t $00d700
010471 4f 5c 20 00 ff                      jsr.a24 ($ff0020)     ; os4_PrintError
010476 4f 60                               rts.a24
010478                 IF10464_end:
010478 2f ad 04 d0                         lda.t $00d004         ; STARTPOS
01047c 2f 8d 00 d7                         sta.t $00d700
010480 4f 5c 59 00 ff                      jsr.a24 ($ff0059)     ; os4_ParseNumber
010485 c9 27                               cmp #$27
010487                                 ;; IF > {
010487 f0 04                               beq +4                ; IF10487_end [1048d]
010489 90 02                               bcc +2                ; IF10487_end [1048d]
01048b a9 27                               lda #$27
01048d                 IF10487_end:
01048d 8d 04 d0                            sta $d004             ; STARTPOS
010490 2f ad 07 d0                         lda.t $00d007         ; ENDPOS
010494 2f 8d 00 d7                         sta.t $00d700
010498 4f 5c 59 00 ff                      jsr.a24 ($ff0059)     ; os4_ParseNumber
01049d c9 27                               cmp #$27
01049f                                 ;; IF > {
01049f f0 04                               beq +4                ; IF1049f_end [104a5]
0104a1 90 02                               bcc +2                ; IF1049f_end [104a5]
0104a3 a9 27                               lda #$27
0104a5                 IF1049f_end:
0104a5 8d 07 d0                            sta $d007             ; ENDPOS
0104a8 a5 82                               lda $82               ; CURSORY
0104aa 29 01                               and #$1
0104ac                                 ;; IF == {
0104ac d0 0a                               bne +10               ; IF104ac_else [104b8]
0104ae a9 f0                               lda #$f0
0104b0 85 b3                               sta $b3               ; CURMSK
0104b2 a5 80                               lda $80               ; COLOR
0104b4 85 b2                               sta $b2               ; CURPXL
0104b6 80 0c                               bra +12               ; IF104ac_end [104c4]
0104b8                 IF104ac_else:
0104b8                                 ;; ELSE
0104b8 a9 0f                               lda #$f
0104ba 85 b3                               sta $b3               ; CURMSK
0104bc a5 80                               lda $80               ; COLOR
0104be 0a                                  asl
0104bf 0a                                  asl
0104c0 0a                                  asl
0104c1 0a                                  asl
0104c2 85 b2                               sta $b2               ; CURPXL
0104c4                 IF104ac_end:
0104c4 4f 20 40 02 01                      jsr.a24 $010240       ; restoreBehindCursor
0104c9 a5 82                               lda $82               ; CURSORY
0104cb 29 fe                               and #$fe
0104cd aa                                  tax
0104ce 5f bd 53 0b 01                      lda.w.a24 $010b53,X   ; LoresScreenBase
0104d3 1f 85 b4                            sta.w $b4             ; ROWPTR
0104d6 ac 04 d0                            ldy $d004             ; STARTPOS
0104d9                 LOOP104d9_start:
0104d9                                 ;; LOOP {
0104d9                 LOOP104d9_loop:
0104d9 b1 b4                               lda ($b4),Y           ; ROWPTR
0104db 25 b3                               and $b3               ; CURMSK
0104dd 05 b2                               ora $b2               ; CURPXL
0104df 91 b4                               sta ($b4),Y           ; ROWPTR
0104e1 c8                                  iny
0104e2 cc 07 d0                            cpy $d007             ; ENDPOS
0104e5                                 ;; IF > {
0104e5 f0 06                               beq +6                ; IF104e5_end [104ed]
0104e7 90 04                               bcc +4                ; IF104e5_end [104ed]
0104e9                                 ;; BREAK
0104e9 4f 80 02 00                         bra.a24 +2            ; loop104d9_end [104ef]
0104ed                 IF104e5_end:
0104ed 80 ea                               bra -22               ; LOOP104d9_loop [104d9]
0104ef                 LOOP104d9_end:
0104ef 4f 20 2b 02 01                      jsr.a24 $01022b       ; saveBehindCursor
0104f4 a9 00                               lda #$0
0104f6 4f 60                               rts.a24

0104f8 ; SUB DoVLine:
00d000          ; VAR @NPRM
00d001          ; VAR @CMD
00d004          ; VAR @STARTPOS
00d007          ; VAR @ENDPOS
0000b4-0000b5   ; VAR @ROWPTR
0000b3          ; VAR @CURMSK
0000b2          ; VAR @CURPXL
0000b1          ; VAR @I
0104f8 ad 00 d0                            lda $d000             ; NPRM
0104fb                                 ;; IF < 1 {
0104fb c9 01                               cmp #$1
0104fd b0 10                               bcs +16               ; IF104fb_end [1050f]
0104ff 2f a9 19 0b 01                      lda.t #$10b19         ; MissingStartErr
010504 2f 8d 00 d7                         sta.t $00d700
010508 4f 5c 20 00 ff                      jsr.a24 ($ff0020)     ; os4_PrintError
01050d 4f 60                               rts.a24
01050f                 IF104fb_end:
01050f                                 ;; IF < 2 {
01050f c9 02                               cmp #$2
010511 b0 10                               bcs +16               ; IF1050f_end [10523]
010513 2f a9 37 0b 01                      lda.t #$10b37         ; MissingEndErr
010518 2f 8d 00 d7                         sta.t $00d700
01051c 4f 5c 20 00 ff                      jsr.a24 ($ff0020)     ; os4_PrintError
010521 4f 60                               rts.a24
010523                 IF1050f_end:
010523 2f ad 04 d0                         lda.t $00d004         ; STARTPOS
010527 2f 8d 00 d7                         sta.t $00d700
01052b 4f 5c 59 00 ff                      jsr.a24 ($ff0059)     ; os4_ParseNumber
010530 c9 2f                               cmp #$2f
010532                                 ;; IF > {
010532 f0 04                               beq +4                ; IF10532_end [10538]
010534 90 02                               bcc +2                ; IF10532_end [10538]
010536 a9 2f                               lda #$2f
010538                 IF10532_end:
010538 8d 04 d0                            sta $d004             ; STARTPOS
01053b 2f ad 07 d0                         lda.t $00d007         ; ENDPOS
01053f 2f 8d 00 d7                         sta.t $00d700
010543 4f 5c 59 00 ff                      jsr.a24 ($ff0059)     ; os4_ParseNumber
010548 c9 2f                               cmp #$2f
01054a                                 ;; IF > {
01054a f0 04                               beq +4                ; IF1054a_end [10550]
01054c 90 02                               bcc +2                ; IF1054a_end [10550]
01054e a9 2f                               lda #$2f
010550                 IF1054a_end:
010550 8d 07 d0                            sta $d007             ; ENDPOS
010553 4f 20 40 02 01                      jsr.a24 $010240       ; restoreBehindCursor
010558 ad 04 d0                            lda $d004             ; STARTPOS
01055b 85 b1                               sta $b1               ; I
01055d a4 81                               ldy $81               ; CURSORX
01055f                 LOOP1055f_start:
01055f                                 ;; LOOP {
01055f                 LOOP1055f_loop:
01055f a5 b1                               lda $b1               ; I
010561 29 01                               and #$1
010563                                 ;; IF == {
010563 d0 0a                               bne +10               ; IF10563_else [1056f]
010565 a9 f0                               lda #$f0
010567 85 b3                               sta $b3               ; CURMSK
010569 a5 80                               lda $80               ; COLOR
01056b 85 b2                               sta $b2               ; CURPXL
01056d 80 0c                               bra +12               ; IF10563_end [1057b]
01056f                 IF10563_else:
01056f                                 ;; ELSE
01056f a9 0f                               lda #$f
010571 85 b3                               sta $b3               ; CURMSK
010573 a5 80                               lda $80               ; COLOR
010575 0a                                  asl
010576 0a                                  asl
010577 0a                                  asl
010578 0a                                  asl
010579 85 b2                               sta $b2               ; CURPXL
01057b                 IF10563_end:
01057b a5 b1                               lda $b1               ; I
01057d 29 fe                               and #$fe
01057f aa                                  tax
010580 5f bd 53 0b 01                      lda.w.a24 $010b53,X   ; LoresScreenBase
010585 1f 85 b4                            sta.w $b4             ; ROWPTR
010588 b1 b4                               lda ($b4),Y           ; ROWPTR
01058a 25 b3                               and $b3               ; CURMSK
01058c 05 b2                               ora $b2               ; CURPXL
01058e 91 b4                               sta ($b4),Y           ; ROWPTR
010590 e6 b1                               inc $b1               ; I
010592 a6 b1                               ldx $b1               ; I
010594 ec 07 d0                            cpx $d007             ; ENDPOS
010597                                 ;; IF > {
010597 f0 06                               beq +6                ; IF10597_end [1059f]
010599 90 04                               bcc +4                ; IF10597_end [1059f]
01059b                                 ;; BREAK
01059b 4f 80 02 00                         bra.a24 +2            ; loop1055f_end [105a1]
01059f                 IF10597_end:
01059f 80 be                               bra -66               ; LOOP1055f_loop [1055f]
0105a1                 LOOP1055f_end:
0105a1 4f 20 2b 02 01                      jsr.a24 $01022b       ; saveBehindCursor
0105a6 a9 00                               lda #$0
0105a8 4f 60                               rts.a24

0105aa ; SUB DoLoad:
00d000          ; VAR @NPRM
00d001          ; VAR @CMD
00d004          ; VAR @FILENAME
0000a0          ; VAR @FN
00009d-00009f   ; VAR @R_IDX
00009b-00009c   ; VAR @ACTUAL
000099-00009a   ; VAR @C_IDX
0105aa 4f 5c 35 00 ff                      jsr.a24 ($ff0035)     ; os4_NextLine
0105af ad 00 d0                            lda $d000             ; NPRM
0105b2                                 ;; IF < 1 {
0105b2 c9 01                               cmp #$1
0105b4 b0 10                               bcs +16               ; IF105b2_end [105c6]
0105b6 2f a9 c5 0a 01                      lda.t #$10ac5         ; NoFilenameErrStr
0105bb 2f 8d 00 d7                         sta.t $00d700
0105bf 4f 5c 20 00 ff                      jsr.a24 ($ff0020)     ; os4_PrintError
0105c4 4f 60                               rts.a24
0105c6                 IF105b2_end:
0105c6 2f ad 04 d0                         lda.t $00d004         ; FILENAME
0105ca                                 ;; IF == {
0105ca d0 0d                               bne +13               ; IF105ca_end [105d9]
0105cc 2f a9                               lda.t #$10ac5         ; NoFilenameErrStr
0105ce 2f 8d 00 d7                         sta.t $00d700
0105d2 4f 5c 20 00 ff                      jsr.a24 ($ff0020)     ; os4_PrintError
0105d7 4f 60                               rts.a24
0105d9                 IF105ca_end:
0105d9 2f 8d 00 d6                         sta.t $00d600
0105dd 4f 5c 0c 01 ff                      jsr.a24 ($ff010c)     ; os4_Disk4Open
0105e2                                 ;; IF != {
0105e2 f0 07                               beq +7                ; IF105e2_end [105eb]
0105e4 4f 5c 1b 01 ff                      jsr.a24 ($ff011b)     ; os4_Disk4PrintError
0105e9 4f 60                               rts.a24
0105eb                 IF105e2_end:
0105eb 86 a0                               stx $a0               ; FN
0105ed 8e f1 c0                            stx $c0f1             ; DISK4_PARAM0
0105f0 2f 64 9d                            stz.t $9d             ; R_IDX
0105f3                 LOOP105f3_start:
0105f3                                 ;; LOOP {
0105f3                 LOOP105f3_loop:
0105f3 4f 5c 12 01 ff                      jsr.a24 ($ff0112)     ; os4_Disk4Read
0105f8                                 ;; IF == 2 {
0105f8 c9 02                               cmp #$2
0105fa d0 04                               bne +4                ; IF105f8_end [10600]
0105fc                                 ;; BREAK
0105fc 4f 80 43 00                         bra.a24 +67           ; loop105f3_end [10643]
010600                 IF105f8_end:
010600 2f ad f7 c0                         lda.t $00c0f7         ; DISK4_RET0
010604                                 ;; IF == {
010604 d0 04                               bne +4                ; IF10604_end [1060a]
010606                                 ;; BREAK
010606 4f 80 39 00                         bra.a24 +57           ; loop105f3_end [10643]
01060a                 IF10604_end:
01060a 1f 85 9b                            sta.w $9b             ; ACTUAL
01060d 1f 64 99                            stz.w $99             ; C_IDX
010610                 LOOP10610_start:
010610                                 ;; LOOP {
010610                 LOOP10610_loop:
010610 1f a2 00 c8                         ldx.w #$c800          ; DISK4_RAM
010614 1f a4 99                            ldy.w $99             ; C_IDX
010617 4f ab                               lda.a24 XY
010619 2f e6 99                            inc.t $99             ; C_IDX
01061c 2f a2 00 08 00                      ldx.t #$800           ; LORES2BASE
010621 2f a4 9d                            ldy.t $9d             ; R_IDX
010624 4f bb                               sta.a24 XY
010626 2f e6 9d                            inc.t $9d             ; R_IDX
010629 1f a4 99                            ldy.w $99             ; C_IDX
01062c 1f c4 9b                            cpy.w $9b             ; ACTUAL
01062f                                 ;; IF == {
01062f d0 04                               bne +4                ; IF1062f_end [10635]
010631                                 ;; BREAK
010631 4f 80 0c 00                         bra.a24 +12           ; loop10610_end [10641]
010635                 IF1062f_end:
010635 1f c0 00 04                         cpy.w #$400           ; LORESSIZE
010639                                 ;; IF == {
010639 d0 04                               bne +4                ; IF10639_end [1063f]
01063b                                 ;; BREAK
01063b 4f 80 02 00                         bra.a24 +2            ; loop10610_end [10641]
01063f                 IF10639_end:
01063f 80 cf                               bra -49               ; LOOP10610_loop [10610]
010641                 LOOP10610_end:
010641 80 b0                               bra -80               ; LOOP105f3_loop [105f3]
010643                 LOOP105f3_end:
010643 a5 a0                               lda $a0               ; FN
010645 4f 5c 0f 01 ff                      jsr.a24 ($ff010f)     ; os4_Disk4Close
01064a 2f a9 95 0a 01                      lda.t #$10a95         ; LoadedStr
01064f 2f 8d 00 d7                         sta.t $00d700
010653 4f 5c 1d 00 ff                      jsr.a24 ($ff001d)     ; os4_PrintString
010658 2f ad 04 d0                         lda.t $00d004         ; FILENAME
01065c 2f 8d 00 d7                         sta.t $00d700
010660 4f 5c 1d 00 ff                      jsr.a24 ($ff001d)     ; os4_PrintString
010665 4f 5c 35 00 ff                      jsr.a24 ($ff0035)     ; os4_NextLine
01066a 4f 5c 35 00 ff                      jsr.a24 ($ff0035)     ; os4_NextLine
01066f 4f 60                               rts.a24

010671 ; SUB DoStore:
00d000          ; VAR @NPRM
00d001          ; VAR @CMD
00d004          ; VAR @FILENAME
0000a0          ; VAR @FN
00009e-00009f   ; VAR @REMAINING
00009b-00009d   ; VAR @W_IDX
000098-00009a   ; VAR @C_IDX
010671 4f 20 40 02 01                      jsr.a24 $010240       ; restoreBehindCursor
010676 4f 5c 35 00 ff                      jsr.a24 ($ff0035)     ; os4_NextLine
01067b ad 00 d0                            lda $d000             ; NPRM
01067e                                 ;; IF < 1 {
01067e c9 01                               cmp #$1
010680 b0 10                               bcs +16               ; IF1067e_end [10692]
010682 2f a9 c5 0a 01                      lda.t #$10ac5         ; NoFilenameErrStr
010687 2f 8d 00 d7                         sta.t $00d700
01068b 4f 5c 20 00 ff                      jsr.a24 ($ff0020)     ; os4_PrintError
010690 4f 60                               rts.a24
010692                 IF1067e_end:
010692 2f ad 04 d0                         lda.t $00d004         ; FILENAME
010696                                 ;; IF == {
010696 d0 0d                               bne +13               ; IF10696_end [106a5]
010698 2f a9                               lda.t #$10ac5         ; NoFilenameErrStr
01069a 2f 8d 00 d7                         sta.t $00d700
01069e 4f 5c 20 00 ff                      jsr.a24 ($ff0020)     ; os4_PrintError
0106a3 4f 60                               rts.a24
0106a5                 IF10696_end:
0106a5 2f 8d 00 d6                         sta.t $00d600
0106a9 2f a9 a7 0a 01                      lda.t #$10aa7         ; LoresFileType
0106ae 2f 8d 03 d6                         sta.t $00d603
0106b2 4f 5c 09 01 ff                      jsr.a24 ($ff0109)     ; os4_Disk4Create
0106b7                                 ;; IF != {
0106b7 f0 07                               beq +7                ; IF106b7_end [106c0]
0106b9 4f 5c 1b 01 ff                      jsr.a24 ($ff011b)     ; os4_Disk4PrintError
0106be 4f 60                               rts.a24
0106c0                 IF106b7_end:
0106c0 86 a0                               stx $a0               ; FN
0106c2 8e f1 c0                            stx $c0f1             ; DISK4_PARAM0
0106c5 1f a9 00 04                         lda.w #$400           ; LORESSIZE
0106c9 1f 85 9e                            sta.w $9e             ; REMAINING
0106cc 2f 64 9b                            stz.t $9b             ; W_IDX
0106cf                 LOOP106cf_start:
0106cf                                 ;; LOOP {
0106cf                 LOOP106cf_loop:
0106cf 4f 5c 18 01 ff                      jsr.a24 ($ff0118)     ; os4_Disk4C800
0106d4 2f 64 98                            stz.t $98             ; C_IDX
0106d7                 LOOP106d7_start:
0106d7                                 ;; LOOP {
0106d7                 LOOP106d7_loop:
0106d7 2f a2 00 08 00                      ldx.t #$800           ; LORES2BASE
0106dc 2f a4 9b                            ldy.t $9b             ; W_IDX
0106df 4f ab                               lda.a24 XY
0106e1 2f e6 9b                            inc.t $9b             ; W_IDX
0106e4 1f a2 00 c8                         ldx.w #$c800          ; DISK4_RAM
0106e8 2f a4 98                            ldy.t $98             ; C_IDX
0106eb 4f bb                               sta.a24 XY
0106ed 2f e6 98                            inc.t $98             ; C_IDX
0106f0 2f a5 98                            lda.t $98             ; C_IDX
0106f3 2f c5 9e                            cmp.t $9e             ; REMAINING
0106f6                                 ;; IF == {
0106f6 d0 04                               bne +4                ; IF106f6_end [106fc]
0106f8                                 ;; BREAK
0106f8 4f 80 0d 00                         bra.a24 +13           ; loop106d7_end [10709]
0106fc                 IF106f6_end:
0106fc 2f c9 00 04 00                      cmp.t #$400
010701                                 ;; IF == {
010701 d0 04                               bne +4                ; IF10701_end [10707]
010703                                 ;; BREAK
010703 4f 80 02 00                         bra.a24 +2            ; loop106d7_end [10709]
010707                 IF10701_end:
010707 80 ce                               bra -50               ; LOOP106d7_loop [106d7]
010709                 LOOP106d7_end:
010709 2f 8d f4 c0                         sta.t $00c0f4         ; DISK4_PARAM1
01070d 2f a5 9e                            lda.t $9e             ; REMAINING
010710 38                                  sec
010711 e5 98                               sbc $98               ; C_IDX
010713 1f 85 9e                            sta.w $9e             ; REMAINING
010716 4f 5c 15 01 ff                      jsr.a24 ($ff0115)     ; os4_Disk4Write
01071b                                 ;; IF != {
01071b f0 09                               beq +9                ; IF1071b_end [10726]
01071d 4f 5c 1b 01 ff                      jsr.a24 ($ff011b)     ; os4_Disk4PrintError
010722                                 ;; BREAK
010722 4f 80 0b 00                         bra.a24 +11           ; loop106cf_end [10731]
010726                 IF1071b_end:
010726 2f a5 9e                            lda.t $9e             ; REMAINING
010729                                 ;; IF == {
010729 d0 04                               bne +4                ; IF10729_end [1072f]
01072b                                 ;; BREAK
01072b 4f 80 02 00                         bra.a24 +2            ; loop106cf_end [10731]
01072f                 IF10729_end:
01072f 80 9e                               bra -98               ; LOOP106cf_loop [106cf]
010731                 LOOP106cf_end:
010731 a5 a0                               lda $a0               ; FN
010733 4f 5c 0f 01 ff                      jsr.a24 ($ff010f)     ; os4_Disk4Close
010738 2f a9 9e 0a 01                      lda.t #$10a9e         ; StoredStr
01073d 2f 8d 00 d7                         sta.t $00d700
010741 4f 5c 1d 00 ff                      jsr.a24 ($ff001d)     ; os4_PrintString
010746 2f ad 04 d0                         lda.t $00d004         ; FILENAME
01074a 2f 8d 00 d7                         sta.t $00d700
01074e 4f 5c 1d 00 ff                      jsr.a24 ($ff001d)     ; os4_PrintString
010753 4f 5c 35 00 ff                      jsr.a24 ($ff0035)     ; os4_NextLine
010758 4f 5c 35 00 ff                      jsr.a24 ($ff0035)     ; os4_NextLine
01075d 4f 60                               rts.a24

01075f ; SUB DoX:
00d000          ; VAR @NPRM
00d001          ; VAR @CMD
00d004          ; VAR @XPOS
01075f ad 00 d0                            lda $d000             ; NPRM
010762                                 ;; IF < 1 {
010762 c9 01                               cmp #$1
010764 b0 10                               bcs +16               ; IF10762_end [10776]
010766 2f a9 01 0b 01                      lda.t #$10b01         ; MissingValueErr
01076b 2f 8d 00 d7                         sta.t $00d700
01076f 4f 5c 20 00 ff                      jsr.a24 ($ff0020)     ; os4_PrintError
010774 4f 60                               rts.a24
010776                 IF10762_end:
010776 2f ad 04 d0                         lda.t $00d004         ; XPOS
01077a 2f 8d 00 d7                         sta.t $00d700
01077e 4f 5c 59 00 ff                      jsr.a24 ($ff0059)     ; os4_ParseNumber
010783 c9 27                               cmp #$27
010785                                 ;; IF > {
010785 f0 04                               beq +4                ; IF10785_end [1078b]
010787 90 02                               bcc +2                ; IF10785_end [1078b]
010789 a9 27                               lda #$27
01078b                 IF10785_end:
01078b 8d 04 d0                            sta $d004             ; XPOS
01078e 4f 20 40 02 01                      jsr.a24 $010240       ; restoreBehindCursor
010793 ad 04 d0                            lda $d004             ; XPOS
010796 85 81                               sta $81               ; CURSORX
010798 4f 20 2b 02 01                      jsr.a24 $01022b       ; saveBehindCursor
01079d 4f 20 55 02 01                      jsr.a24 $010255       ; drawCursor
0107a2 a9 00                               lda #$0
0107a4 4f 60                               rts.a24

0107a6 ; SUB DoY:
00d000          ; VAR @NPRM
00d001          ; VAR @CMD
00d004          ; VAR @YPOS
0107a6 ad 00 d0                            lda $d000             ; NPRM
0107a9                                 ;; IF < 1 {
0107a9 c9 01                               cmp #$1
0107ab b0 10                               bcs +16               ; IF107a9_end [107bd]
0107ad 2f a9 01 0b 01                      lda.t #$10b01         ; MissingValueErr
0107b2 2f 8d 00 d7                         sta.t $00d700
0107b6 4f 5c 20 00 ff                      jsr.a24 ($ff0020)     ; os4_PrintError
0107bb 4f 60                               rts.a24
0107bd                 IF107a9_end:
0107bd 2f ad 04 d0                         lda.t $00d004         ; YPOS
0107c1 2f 8d 00 d7                         sta.t $00d700
0107c5 4f 5c 59 00 ff                      jsr.a24 ($ff0059)     ; os4_ParseNumber
0107ca c9 2f                               cmp #$2f
0107cc                                 ;; IF > {
0107cc f0 04                               beq +4                ; IF107cc_end [107d2]
0107ce 90 02                               bcc +2                ; IF107cc_end [107d2]
0107d0 a9 2f                               lda #$2f
0107d2                 IF107cc_end:
0107d2 8d 04 d0                            sta $d004             ; YPOS
0107d5 4f 20 40 02 01                      jsr.a24 $010240       ; restoreBehindCursor
0107da ad 04 d0                            lda $d004             ; YPOS
0107dd 85 82                               sta $82               ; CURSORY
0107df 4f 20 2b 02 01                      jsr.a24 $01022b       ; saveBehindCursor
0107e4 4f 20 55 02 01                      jsr.a24 $010255       ; drawCursor
0107e9 a9 00                               lda #$0
0107eb 4f 60                               rts.a24

0107ed ; SUB DoQuit:
0107ed a9 00                               lda #$0               ; DISP_TEXT_1
0107ef 4f 5c 08 00 ff                      jsr.a24 ($ff0008)     ; os4_SetScreenMode
0107f4 a9 ff                               lda #$ff
0107f6 4f 60                               rts.a24

0107f8 ; SUB FillScreen:
0000b4-0000b5   ; VAR @ROWPTR
0000b3          ; VAR @FILLCOLOR
0107f8 29 0f                               and #$f
0107fa 85 b3                               sta $b3               ; FILLCOLOR
0107fc 0a                                  asl
0107fd 0a                                  asl
0107fe 0a                                  asl
0107ff 0a                                  asl
010800 05 b3                               ora $b3               ; FILLCOLOR
010802 85 b3                               sta $b3               ; FILLCOLOR
010804 a2 00                               ldx #$0
010806                 DO10806_start:
010806                                 ;; DO {
010806                 DO10806_loop:
010806 5f bd 53 0b 01                      lda.w.a24 $010b53,X   ; LoresScreenBase
01080b 1f 85 b4                            sta.w $b4             ; ROWPTR
01080e a5 b3                               lda $b3               ; FILLCOLOR
010810                 FOR10810_start:
010810                                 ;; FOR Y = 0 TO 39 {
010810 a0 00                               ldy #$0
010812                 FOR10810_loop:
010812 91 b4                               sta ($b4),Y           ; ROWPTR
010814 c8                                  iny
010815 c0 28                               cpy #$28
010817 d0 f9                               bne -7                ; FOR10810_loop [10812]
010819                 FOR10810_end:
010819 e8                                  inx
01081a e8                                  inx
01081b e0 30                               cpx #$30
01081d                                 ;; WHILE !=
01081d f0 02                               beq +2                ; DO10806_end [10821]
01081f 80 e5                               bra -27               ; DO10806_loop [10806]
010821                 DO10806_end:
010821 4f 20 2b 02 01                      jsr.a24 $01022b       ; saveBehindCursor
010826 4f 60                               rts.a24

010828 ; SUB CommandLine:
000004          ; VAR @I
000005          ; VAR @I6
010828 ad 00 01                            lda $0100             ; INPBUFFER
01082b                                 ;; IF == {
01082b d0 02                               bne +2                ; IF1082b_end [1082f]
01082d 4f 60                               rts.a24
01082f                 IF1082b_end:
01082f 2f a9 00 01 00                      lda.t #$100           ; INPBUFFER
010834 2f 8d 00 d7                         sta.t $00d700
010838 4f 5c 56 00 ff                      jsr.a24 ($ff0056)     ; os4_ParseInputParams
01083d 2f ae 01 d0                         ldx.t $00d001
010841 4f 7b                               lda.a24 X
010843 c9 30                               cmp #$30
010845                                 ;; IF >= {
010845 90 15                               bcc +21               ; IF10845_end [1085c]
010847 c9 39                               cmp #$39
010849                                 ;; IF <= {
010849 f0 02                               beq +2                ; IF10849_end_eq [1084d]
01084b b0 0f                               bcs +15               ; IF10849_end [1085c]
01084d                 IF10849_end_eq:
01084d 2f 8e 00 d7                         stx.t $00d700
010851 4f 5c 59 00 ff                      jsr.a24 ($ff0059)     ; os4_ParseNumber
010856 29 0f                               and #$f
010858 85 80                               sta $80               ; COLOR
01085a 4f 60                               rts.a24
01085c                 IF10849_end:
01085c                 IF10845_end:
01085c 2f ad 01 d0                         lda.t $00d001
010860 2f 8d 00 d7                         sta.t $00d700
010864                 FOR10864_start:
010864                                 ;; FOR @I = 0 TO 10 {
010864 a2 00                               ldx #$0
010866 86 04                               stx $04
010868                 FOR10864_loop:
010868 a5 04                               lda $04               ; I
01086a                       ;; A <<= 2 
01086a 0a                                  asl
01086b 0a                                  asl
01086c 85 05                               sta $05               ; I6
01086e a5 04                               lda $04               ; I
010870                       ;; A <<= 1 
010870 0a                                  asl
010871 18                                  clc
010872 65 05                               adc $05               ; I6
010874 85 05                               sta $05               ; I6
010876 aa                                  tax
010877 6f bd b6 0b 01                      lda.t.a24 $010bb6,X   ; CommandList
01087c 2f 8d 03 d7                         sta.t $00d703
010880 4f 5c 4a 00 ff                      jsr.a24 ($ff004a)     ; os4_CompareText
010885                                 ;; IF - {
010885 10 14                               bpl +20               ; IF10885_end [1089b]
010887 a6 05                               ldx $05               ; I6
010889 6f bd b9 0b 01                      lda.t.a24 $010bb9,X   ; CommandList
01088e 2f 85 00                            sta.t $00
010891 4f 5c 00 00 00                      jsr.a24 ($00)
010896 8d ff d0                            sta $d0ff
010899 4f 60                               rts.a24
01089b                 IF10885_end:
01089b e6 04                               inc $04
01089d a6 04                               ldx $04
01089f e0 0b                               cpx #$b
0108a1 d0 c5                               bne -59               ; FOR10864_loop [10868]
0108a3                 FOR10864_end:
0108a3 2f a9 ab 0a 01                      lda.t #$10aab         ; UnknownCommandErr
0108a8 2f 8d 00 d7                         sta.t $00d700
0108ac 4f 5c 20 00 ff                      jsr.a24 ($ff0020)     ; os4_PrintError
0108b1 9c ff d0                            stz $d0ff
0108b4 4f 60                               rts.a24

0108b6 ; SUB CompleteCommand:
000004          ; VAR @I
000005          ; VAR @I6
0108b6 1f a9 00 01                         lda.w #$100           ; INPBUFFER
0108ba 2f 8d 00 d7                         sta.t $00d700
0108be                 FOR108be_start:
0108be                                 ;; FOR @I = 0 TO 10 {
0108be a2 00                               ldx #$0
0108c0 86 04                               stx $04
0108c2                 FOR108be_loop:
0108c2 a5 04                               lda $04               ; I
0108c4                       ;; A <<= 2 
0108c4 0a                                  asl
0108c5 0a                                  asl
0108c6 85 05                               sta $05               ; I6
0108c8 a5 04                               lda $04               ; I
0108ca                       ;; A <<= 1 
0108ca 0a                                  asl
0108cb 18                                  clc
0108cc 65 05                               adc $05               ; I6
0108ce 85 05                               sta $05               ; I6
0108d0 aa                                  tax
0108d1 6f bd b6 0b 01                      lda.t.a24 $010bb6,X   ; CommandList
0108d6 2f 8d 03 d7                         sta.t $00d703
0108da 4f 5c 4d 00 ff                      jsr.a24 ($ff004d)     ; os4_CompareStartOfText
0108df                                 ;; IF - {
0108df 10 37                               bpl +55               ; IF108df_end [10918]
0108e1 a6 05                               ldx $05               ; I6
0108e3 6f bd b6 0b 01                      lda.t.a24 $010bb6,X   ; CommandList
0108e8 2f 8d 00 d7                         sta.t $00d700
0108ec 1f a9 00 01                         lda.w #$100           ; INPBUFFER
0108f0 2f 8d 03 d7                         sta.t $00d703
0108f4 4f 5c 50 00 ff                      jsr.a24 ($ff0050)     ; os4_CopyString
0108f9 1f a5 fe                            lda.w $fe             ; TXTPTR
0108fc 1f 1a                               inc.w
0108fe 1f 1a                               inc.w
010900 1f 1a                               inc.w
010902 2f 8d 03 d7                         sta.t $00d703
010906 4f 5c 53 00 ff                      jsr.a24 ($ff0053)     ; os4_CopyStringHigh
01090b c8                                  iny
01090c c8                                  iny
01090d c8                                  iny
01090e 8c 01 ff                            sty $ff01             ; TXTPOS
010911 4f 5c 17 00 ff                      jsr.a24 ($ff0017)     ; os4_PrintCursor
010916 4f 60                               rts.a24
010918                 IF108df_end:
010918 e6 04                               inc $04
01091a a6 04                               ldx $04
01091c e0 0b                               cpx #$b
01091e d0 a2                               bne -94               ; FOR108be_loop [108c2]
010920                 FOR108be_end:
010920 4f 60                               rts.a24

010922 ; SUB ClearInputBuffers:
010922 a9 00                               lda #$0
010924                 FOR10924_start:
010924                                 ;; FOR X = 0 TO 255 {
010924 a2 00                               ldx #$0
010926                 FOR10924_loop:
010926 9d 00 01                            sta $0100,X           ; INPBUFFER
010929 e8                                  inx
01092a e0 00                               cpx #$100
01092c d0 f8                               bne -8                ; FOR10924_loop [10926]
01092e                 FOR10924_end:
01092e 4f 60                               rts.a24

010930 ; SUB ClearCurrentInputBuffer:
010930 a9 00                               lda #$0
010932                 FOR10932_start:
010932                                 ;; FOR X = 0 TO 79 {
010932 a2 00                               ldx #$0
010934                 FOR10932_loop:
010934 9d 00 01                            sta $0100,X           ; INPBUFFER
010937 e8                                  inx
010938 e0 50                               cpx #$50
01093a d0 f8                               bne -8                ; FOR10932_loop [10934]
01093c                 FOR10932_end:
01093c 4f 60                               rts.a24

01093e ; SUB PrevToCurrentInputBuffer:
01093e                 FOR1093e_start:
01093e                                 ;; FOR X = 0 TO 79 {
01093e a2 00                               ldx #$0
010940                 FOR1093e_loop:
010940 bd 50 01                            lda $0150,X           ; INPBUFFER2
010943 9d 00 01                            sta $0100,X           ; INPBUFFER
010946 bd a0 01                            lda $01a0,X           ; INPBUFFER3
010949 9d 50 01                            sta $0150,X           ; INPBUFFER2
01094c e8                                  inx
01094d e0 50                               cpx #$50
01094f d0 ef                               bne -17               ; FOR1093e_loop [10940]
010951                 FOR1093e_end:
010951 4f 60                               rts.a24

010953 ; SUB CurrentToPrevInputBuffer:
010953                 FOR10953_start:
010953                                 ;; FOR X = 0 TO 79 {
010953 a2 00                               ldx #$0
010955                 FOR10953_loop:
010955 bd 50 01                            lda $0150,X           ; INPBUFFER2
010958 9d a0 01                            sta $01a0,X           ; INPBUFFER3
01095b bd 00 01                            lda $0100,X           ; INPBUFFER
01095e 9d 50 01                            sta $0150,X           ; INPBUFFER2
010961 e8                                  inx
010962 e0 50                               cpx #$50
010964 d0 ef                               bne -17               ; FOR10953_loop [10955]
010966                 FOR10953_end:
010966 4f 60                               rts.a24

010968 ; SUB InputBufferToTextScreen:
010968 a0 03                               ldy #$3
01096a                 FOR1096a_start:
01096a                                 ;; FOR X = 0 TO 79 {
01096a a2 00                               ldx #$0
01096c                 FOR1096a_loop:
01096c bd 00 01                            lda $0100,X           ; INPBUFFER
01096f                                 ;; IF == 0 {
01096f c9 00                               cmp #$0
010971 d0 07                               bne +7                ; IF1096f_end [1097a]
010973 8c 01 ff                            sty $ff01             ; TXTPOS
010976                                 ;; BREAK
010976 4f 80 0a 00                         bra.a24 +10           ; for1096a_end [10984]
01097a                 IF1096f_end:
01097a 09 80                               ora #$80
01097c 91 fe                               sta ($fe),Y           ; TXTPTR
01097e c8                                  iny
01097f e8                                  inx
010980 e0 50                               cpx #$50
010982 d0 e8                               bne -24               ; FOR1096a_loop [1096c]
010984                 FOR1096a_end:
010984 a9 a0                               lda #$a0
010986                 LOOP10986_start:
010986                                 ;; LOOP {
010986                 LOOP10986_loop:
010986 c0 28                               cpy #$28
010988                                 ;; IF == {
010988 d0 04                               bne +4                ; IF10988_end [1098e]
01098a                                 ;; BREAK
01098a 4f 80 05 00                         bra.a24 +5            ; loop10986_end [10993]
01098e                 IF10988_end:
01098e 91 fe                               sta ($fe),Y           ; TXTPTR
010990 c8                                  iny
010991 80 f3                               bra -13               ; LOOP10986_loop [10986]
010993                 LOOP10986_end:
010993 4f 60                               rts.a24

010995 ; SUB debugValueA:
010995 48                                  pha
010996 48                                  pha
010997                       ;; A >>= 4 
010997 4a                                  lsr
010998 4a                                  lsr
010999 4a                                  lsr
01099a 4a                                  lsr
01099b                                 ;; IF >= 10 {
01099b c9 0a                               cmp #$a
01099d 90 05                               bcc +5                ; IF1099b_else [109a4]
01099f                       ;; A += 183 
01099f 18                                  clc
0109a0 69 b7                               adc #$b7
0109a2 80 03                               bra +3                ; IF1099b_end [109a7]
0109a4                 IF1099b_else:
0109a4                                 ;; ELSE
0109a4                       ;; A += 176 
0109a4 18                                  clc
0109a5 69 b0                               adc #$b0
0109a7                 IF1099b_end:
0109a7 8d 26 04                            sta $0426
0109aa 68                                  pla
0109ab                       ;; A &= 15 
0109ab 29 0f                               and #$f
0109ad                                 ;; IF >= 10 {
0109ad c9 0a                               cmp #$a
0109af 90 05                               bcc +5                ; IF109ad_else [109b6]
0109b1                       ;; A += 183 
0109b1 18                                  clc
0109b2 69 b7                               adc #$b7
0109b4 80 03                               bra +3                ; IF109ad_end [109b9]
0109b6                 IF109ad_else:
0109b6                                 ;; ELSE
0109b6                       ;; A += 176 
0109b6 18                                  clc
0109b7 69 b0                               adc #$b0
0109b9                 IF109ad_end:
0109b9 8d 27 04                            sta $0427
0109bc 68                                  pla
0109bd 4f 60                               rts.a24

0109bf ; SUB debugValueB:
0109bf 48                                  pha
0109c0 48                                  pha
0109c1                       ;; A >>= 4 
0109c1 4a                                  lsr
0109c2 4a                                  lsr
0109c3 4a                                  lsr
0109c4 4a                                  lsr
0109c5                                 ;; IF >= 10 {
0109c5 c9 0a                               cmp #$a
0109c7 90 05                               bcc +5                ; IF109c5_else [109ce]
0109c9                       ;; A += 183 
0109c9 18                                  clc
0109ca 69 b7                               adc #$b7
0109cc 80 03                               bra +3                ; IF109c5_end [109d1]
0109ce                 IF109c5_else:
0109ce                                 ;; ELSE
0109ce                       ;; A += 176 
0109ce 18                                  clc
0109cf 69 b0                               adc #$b0
0109d1                 IF109c5_end:
0109d1 8d 23 04                            sta $0423
0109d4 68                                  pla
0109d5                       ;; A &= 15 
0109d5 29 0f                               and #$f
0109d7                                 ;; IF >= 10 {
0109d7 c9 0a                               cmp #$a
0109d9 90 05                               bcc +5                ; IF109d7_else [109e0]
0109db                       ;; A += 183 
0109db 18                                  clc
0109dc 69 b7                               adc #$b7
0109de 80 03                               bra +3                ; IF109d7_end [109e3]
0109e0                 IF109d7_else:
0109e0                                 ;; ELSE
0109e0                       ;; A += 176 
0109e0 18                                  clc
0109e1 69 b0                               adc #$b0
0109e3                 IF109d7_end:
0109e3 8d 24 04                            sta $0424
0109e6 68                                  pla
0109e7 4f 60                               rts.a24

0109e9 ; SUB debugValueC:
0109e9 48                                  pha
0109ea 48                                  pha
0109eb                       ;; A >>= 4 
0109eb 4a                                  lsr
0109ec 4a                                  lsr
0109ed 4a                                  lsr
0109ee 4a                                  lsr
0109ef                                 ;; IF >= 10 {
0109ef c9 0a                               cmp #$a
0109f1 90 05                               bcc +5                ; IF109ef_else [109f8]
0109f3                       ;; A += 183 
0109f3 18                                  clc
0109f4 69 b7                               adc #$b7
0109f6 80 03                               bra +3                ; IF109ef_end [109fb]
0109f8                 IF109ef_else:
0109f8                                 ;; ELSE
0109f8                       ;; A += 176 
0109f8 18                                  clc
0109f9 69 b0                               adc #$b0
0109fb                 IF109ef_end:
0109fb 8d 20 04                            sta $0420
0109fe 68                                  pla
0109ff                       ;; A &= 15 
0109ff 29 0f                               and #$f
010a01                                 ;; IF >= 10 {
010a01 c9 0a                               cmp #$a
010a03 90 05                               bcc +5                ; IF10a01_else [10a0a]
010a05                       ;; A += 183 
010a05 18                                  clc
010a06 69 b7                               adc #$b7
010a08 80 03                               bra +3                ; IF10a01_end [10a0d]
010a0a                 IF10a01_else:
010a0a                                 ;; ELSE
010a0a                       ;; A += 176 
010a0a 18                                  clc
010a0b 69 b0                               adc #$b0
010a0d                 IF10a01_end:
010a0d 8d 21 04                            sta $0421
010a10 68                                  pla
010a11 4f 60                               rts.a24

010a13 ; DATA Header:
010a13 4c 4f 2d 45 64 69 74 20 5d 5b 34 20 2d 20 61 20 4c 4f 52 45 53 20 65 64 69 74 6f 72 00

010a30 ; DATA HelpPenStr:
010a30 20 2e 20 2d 20 50 65 6e 20 44 4f 57 4e 00

010a3e ; DATA HelpPenUpStr:
010a3e 20 2f 20 2d 20 50 65 6e 20 55 50 00

010a4a ; DATA HelpHideCursorStr:
010a4a 20 2d 20 2d 20 48 49 44 45 20 43 75 72 73 6f 72 00

010a5b ; DATA HelpShowCursorStr:
010a5b 20 2b 20 2d 20 53 48 4f 57 20 43 75 72 73 6f 72 00

010a6c ; DATA HelpSetColorStr:
010a6c 20 30 2d 31 35 20 2d 20 53 65 74 20 74 68 65 20 63 6f 6c 6f 72 00

010a82 ; DATA HelpListStr:
010a82 20 4c 4f 2d 45 64 69 74 20 43 4f 4d 4d 41 4e 44 53 3a 00

010a95 ; DATA LoadedStr:
010a95 4c 4f 41 44 45 44 3a 20 00

010a9e ; DATA StoredStr:
010a9e 53 54 4f 52 45 44 3a 20 00

010aa7 ; DATA LoresFileType:
010aa7 4c 4f 5f 00

010aab ; DATA UnknownCommandErr:
010aab 2a 2a 20 45 52 52 4f 52 3a 20 55 6e 6b 6e 6f 77 6e 20 63 6f 6d 6d 61 6e 64 00

010ac5 ; DATA NoFilenameErrStr:
010ac5 2a 2a 20 46 49 4c 45 4e 41 4d 45 20 6d 75 73 74 20 62 65 20 73 70 65 63 69 66 69 65 64 00

010ae3 ; DATA MissingColorErr:
010ae3 2a 2a 20 45 52 52 4f 52 3a 20 4d 69 73 73 69 6e 67 20 43 4f 4c 4f 52 20 76 61 6c 75 65 00

010b01 ; DATA MissingValueErr:
010b01 2a 2a 20 45 52 52 4f 52 3a 20 4d 69 73 73 69 6e 67 20 56 41 4c 55 45 00

010b19 ; DATA MissingStartErr:
010b19 2a 2a 20 45 52 52 4f 52 3a 20 4d 69 73 73 69 6e 67 20 53 54 41 52 54 20 76 61 6c 75 65 00

010b37 ; DATA MissingEndErr:
010b37 2a 2a 20 45 52 52 4f 52 3a 20 4d 69 73 73 69 6e 67 20 45 4e 44 20 76 61 6c 75 65 00

010b53 ; DATA LoresScreenBase:
010b53 00 08
010b55 80 08
010b57 00 09
010b59 80 09
010b5b 00 0a
010b5d 80 0a
010b5f 00 0b
010b61 80 0b
010b63 28 08
010b65 a8 08
010b67 28 09
010b69 a8 09
010b6b 28 0a
010b6d a8 0a
010b6f 28 0b
010b71 a8 0b
010b73 50 08
010b75 d0 08
010b77 50 09
010b79 d0 09
010b7b 50 0a
010b7d d0 0a
010b7f 50 0b
010b81 d0 0b

010b83 ; DATA CMD_Help:
010b83 3f 00

010b85 ; DATA CMD_Color:
010b85 63 6f 6c 6f 72 00

010b8b ; DATA CMD_Clear:
010b8b 63 6c 65 61 72 00

010b91 ; DATA CMD_Fill:
010b91 66 69 6c 6c 00

010b96 ; DATA CMD_HLine:
010b96 68 6c 69 6e 65 00

010b9c ; DATA CMD_Load:
010b9c 6c 6f 61 64 00

010ba1 ; DATA CMD_Store:
010ba1 73 74 6f 72 65 00

010ba7 ; DATA CMD_VLine:
010ba7 76 6c 69 6e 65 00

010bad ; DATA CMD_X:
010bad 78 00

010baf ; DATA CMD_Y:
010baf 79 00

010bb1 ; DATA CMD_Quit:
010bb1 71 75 69 74 00

010bb6 ; DATA CommandList:
010bb6 83 0b 01
010bb9 af 02 01
010bbc 85 0b 01
010bbf e9 03 01
010bc2 8b 0b 01
010bc5 15 04 01
010bc8 91 0b 01
010bcb 1e 04 01
010bce 96 0b 01
010bd1 4d 04 01
010bd4 9c 0b 01
010bd7 aa 05 01
010bda a1 0b 01
010bdd 71 06 01
010be0 a7 0b 01
010be3 f8 04 01
010be6 ad 0b 01
010be9 5f 07 01
010bec af 0b 01
010bef a6 07 01
010bf2 b1 0b 01
010bf5 ed 07 01
